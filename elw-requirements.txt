## Модель данных

1. Система поддерживает типизацию заданий в пределах каждого учебного курса. 
    
    Например, практикум и лекция для курса Дискретной Математики.

1. Для каждого типа задания определяется независимый набор типов файлов. 
    
    Например, для компьютерного практикума: код решения, отчет, тестовые наборы данных.

1. Некоторые из типов файлов студенты могут загрузить в систему, в то время как некоторые доступны только для чтения. 
    
    Например, решение можно загрузить в то время как тестовые наборы данных и материалы лекций доступны только на чтение.

1. Для отдельного задания и типа файлов возможны различные состояния. Каждый из файлов оценивается независимо от других. Загрузка становится доступной при начале определенного занятия (см. требования к Расписанию ниже). 

    Список состояний: нет файлов, загрузка недоступна - Закрыто/Closed; нет файлов, загрузка доступна - Открыто/Open; файлы добавлены студентом, системой выставлен автоматический балл, преподаватель не подтвердил этот балл - Проверка/Pending, преподаватель изменил и подтвердил балл - Учтено/Approved, преподаватель отклонил загрузку - Возвращено/Declined. 

1. Для каждого типа файлов заданы допустимые форматы имени файла.
   
    Например, отчеты для лабораторных работ можно загружать только в файлах с расширением ".rtf". 

1. Для каждого типа задания и связанного типа файлов определяется его доля в общем балле задания. 

    Например, код решения связан с 0.6 от балла для всех заданий определенного типа, в то время как отчет будет связан с 0.4 от общего балла.

1. Для каждого типа задания и связанного типа файлов определяется набор критериев проверки, влияющих на итоговый балл. 

    Например, для кода решения определяется эффективность алгоритма, для отчета - соответствие формата.

1. Критерий меняет балл для конкретной загрузки студента на определенный множитель. Критерий может применяться несколько раз. 

    Например, одна ошибка форматирования в отчете уменьшает бал на 10% (= 0.9), двухкратное применение критерия уменьшает балл на 19% (0.9^2 = 0.81).

1. Различные критерии применяются независимо: итоговые коэффициенты перемножаются.

    Например, пятикратное применение критерия "задержка сдачи на 1 день" с коэфф. 0.995 (сдача задержана на 5 дней) и двухкратное применение "ошибка форматирования" с коэфф. 0.9, итоговый коэфф. = 1 * 0.995^5 * 0.9^2 = 0.78995149

1. Система может учитывать исходный адрес и время отправки файла студентом для автоматического применения критериев, связанных с работой студента с системой во время занятий и в аудитории, где проводится данное занятие. 

    Например, баллы для всех файлов, полученных системой не во время занятий уменьшаются на 5%.

1. Большинство типов файлов и связанных критериев предварительно вычисляются системой в автоматическом режиме. Интерфейс системы предоставляет преподавателю возможность изменить автоматически вычисленные кратности всех критериев при оценке файлов.

    Например, для некоторых курсов и типов заданий система автоматически проверяет коды решений на соответствие связанным тестам этого задания. Критерии связанные с адресом и временем отправки вычисляются системой а не преподавателем.

1. Система позволяет изменить кратность определенного критерия для набора файлов, удовлетворяющего определенному критерию (группа, студент, тип файла, диапазон дат).

    Например, выставить в 0 кратность критерия "отправка не из аудитории" для всех файлов, присланных групой в определенном диапазоне дат (либо от определенного студента).


## Динамическое поведение системы

1. Расписание (enrollment) для определенной группы задает список занятий (дата, время-от и время-до) и критерии для проверки адресов отправки на предмет работы из аудиторий.

    Например, одно из занятий будет проводиться 12-03-12 с 8:30 до 10:25 и все адреса, содержащие подстроку 10.35.8. соответствуют аудитории в которой проводится занятие. 

1. Кроме этого, расписание задает соответствие заданий каждого типа занятиям. 

    При этом для каждого задания известен его суммарный балл, открывающее занятие, на котором оно становится доступным для выполнения, и соответствие всех типов файлов занятиям, до завершения которых студенту нужно сохранить их в системе.

1. Для каждого из заданий задается набор вариантов. Некоторые из вариантов могут быть публичными.

    Например, лабораторная работа может выполняться по нескольким исходным вариантам задания. При этом одно из заданий (или пример оформленного протокола) доступен в публичном варианте для всех студентов.

1. Для любого задания студент до открывающего занятия не может знать свой вариант.

    Недоступны не только конкретные файлы варианта но и название варианта как таковое. Список всех возможных вариантов может быть доступен.

## Отчеты

1. Студент может посмотреть отчет по состоянию заданий для определенного Расписания (задающее Курс и заняния).

    При этом отображаются суммарные состояния загрузок по каждому заданию и типу фалов для Расписания работающего с системой Студента. 
    Просматривать состояния загрузок для других студентов нельзя. 
    В состоянии загрузок для каждого задания и типа файлов выводится максимальный балл из Учтенных/Approved файлов и последний автоматический балл из Проверяемых/Pending.
    Возможно наличие обоих, одного либо ни одного из указанных баллов, в зависимости от количества и состояний файлов.
    В состоянии загрузок для каждого задания и типа файлов присутствует ссылка на отчет из следующего пункта для текущего задания, и для файлов одного типа для текущего задания.

        //  это наши новые dashboards, тут явно нужно дополнить эскизами и видами отчетов      

1. Студент может посмотреть отчет по состоянию отдельных файлов для определенного Расписания.
    
    При этом доступна фильтрация по состоянию загрузки (Открыта, Выполнена, Принята, Отклонена), заданиям, типам заданий и типам файлов.
    
        //  это старые табличные отчеты

1. И студент, и преподаватель могут посмотреть занятия (время и аудитории) для определенного расписания.

    При этом доступна фильтрация по типам заданий.   
    
        //  это не реализовано
      

1. Студент может узнать как соотносятся его баллы с баллами других студентов той же группы.
    
    Например, для определенного задания и типа файлов может быть написано "В лучших 5%". 
    
        //  это не реализовано, но идея интересная      

1. Преподавателю доступен табличный отчет с лучшим баллом из Учтенных/Approved баллов и последним автоматическим баллом из Проверяемых/Pending файлов для каждого типа файлов для каждого задания каждого студента в пределах одного Расписания.  

1. И преподавателю, и студенту доступен отчет с критериями и их кратностью, использованными для вычисления балла по определенной загрузке. 

