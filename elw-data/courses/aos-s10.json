{"name":"AOS","id":"aos-s10","assBundles":[
	{
		"assignments":[
			{
				"name":"Лабораторная №1(a) - Арифметика",
				"id":"1.lw1.a",
				"shared":false,
				"scoring": {
					"scoreBudget":5,
					"classBefore":4,
					"classFrom":1,
					"classHold":4,
					"requireClean":false
				},
				"versions":[
					{
						"name":"Увеличить на 2",
						"id":"1",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:65:67"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:9:11"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:23:25"]}
							}
						],
						"statementHtml":["Увеличить содержимое регистра $a0 на 2"],
						"solution":["addi $a0, $a0, 2"]
					},
					{
						"name":"Уменьшить на 2",
						"id":"2",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:65:63"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:9:7"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:23:21"]}
							}
						],
						"statementHtml":["Уменьшить содержимое регистра $a0 на 2"],
						"solution":["addi $a0, $a0, -2"]
					},
					{
						"name":"Сложение",
						"id":"3",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:65:65","$a1:3:3","$v0::68"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:9:9","$a1:17:17","$v0::26"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:23:23","$a1:5:5","$v0::28"]}
							}
						],
						"statementHtml":["Сложить содержимое регистров $a0 и $a1 и поместить результат в $v0"],
						"solution":["add $v0, $a0, $a1"]
					},
					{
						"name":"Вычитание",
						"id":"4",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:65:65","$a1:3:3","$v0::62"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:9:9","$a1:17:17","$v0::-8"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:23:23","$a1:5:5","$v0::18"]}
							}
						],
						"statementHtml":["Вычесть содержимое регистра $a1 из содержимого регистра $a0 и поместить результат в $v0"],
						"solution":["sub $v0, $a0, $a1"]
					},
					{
						"name":"Логическое ИЛИ",
						"id":"5",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:15:15","$a1:11:11","$v0::15"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:9:9","$a1:6:6","$v0::15"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:10:10","$a1:5:5","$v0::15"]}
							}
						],
						"statementHtml":["Выполнить \"логическое или\" регистров $a0 и $a1, поместить результат в $vo"],
						"solution":["or $v0,$a0, $a1"]
					},
					{
						"name":"Логическое И",
						"id":"6",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:15:15","$a1:7:7","$v0::7"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:10:10","$a1:5:5","$v0::0"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:6:6","$a1:17:17","$v0::0"]}
							}
						],
						"statementHtml":["Выполнить \"логическое И\" регистров $a0 и $a1, поместить результат в $v0"],
						"solution":["and $v0, $a0, $a1"]
					}
				]
			},
			{
				"name":"Лабораторная №1(б) - Биты",
				"id":"1.lw1.b",
				"shared":false,
				"scoring": {
					"scoreBudget":5,
					"classBefore":4,
					"classFrom":1,
					"classHold":4,
					"requireClean":false
				},
				"versions":[
					{
						"name":"Сдвиг влево",
						"id":"1",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:65:65","$v0::130"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:9:9","$v0::18"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:23:23","$v0::46"]}
							}
						],
						"statementHtml":["Выполнить побитовый сдвиг содержимого регистра $a0 влево на 1 разряд и записать результат в $v0"],
						"solution":["sll $v0, $a0, 1"]
					},
					{
						"name":"Арифметический сдвиг вправо",
						"id":"2",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:65:65","$v0::32"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:-9:-9","$v0::-5"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:23:23","$v0::11"]}
							}
						],
						"statementHtml":["Выполнить арифметический сдвиг содержимого регистра $a0 вправо на 1 разряд и записать результат в $v0"],
						"solution":["sra $v0, $a0, 1"]
					},
					{
						"name":"Младший бит",
						"id":"3",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:15:15","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:-7:-7","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:6:6","$v0::0"]}
							}
						],
						"statementHtml":["Выделить нулевой бит регистра $a0 и поместить результат в $v0"],
						"solution":["andi $v0,$a0, 1"]
					},
					{
						"name":"Исключающее ИЛИ с операндом",
						"id":"4",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:11:11","$v0::0"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:23:23","$v0::28"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:14:14","$v0::5"]}
							}
						],
						"statementHtml":["Выполнить исключающее «или» регистра $a0 и числа \"11\", поместить результат в $v0"],
						"solution":["xori $v0, $a0, 11"]
					},
					{
						"name":"Установка битов в 1",
						"id":"5",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:17:17","$v0::21"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:23:23","$v0::23"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:0:0","$v0::20"]}
							}
						],
						"statementHtml":["Установить 3-й и 5-й биты регистра $v0 в 1, остальные биты скопировать из $a0"],
						"solution":["ori $v0, $a0, 20"]
					},
					{
						"name":"Установка битов в 0",
						"id":"6",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:25:25","$v0::59"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:19:19","$v0::51"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:42:42","$v0::42"]}
							}
						],
						"statementHtml":["Установить 2-й и 6-й биты содержимого регистра $v0 в 1, остальные биты скопировать из $a0"],
						"solution":["ori $v0, $a0, 34"]
					}
				]
			},
			{
				"name":"Лабораторная №1(в) - Запись/чтение",
				"id":"1.lw1.c",

				"shared":false,
				"scoring": {
					"scoreBudget":5,
					"classBefore":4,
					"classFrom":1,
					"classHold":4,
					"requireClean":false
				},
				"versions":[
					{
						"name":"Запись в память",
						"id":"1",
						"tests":[
							{
								"shared":true,
								"args":{"mem":["0x100::65"],"regs":["$a0:65:65","$a1:0x100:0x100"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100::9"],"regs":["$a0:9:9","$a1:0x100:0x100"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100::23"],"regs":["$a0:23:23","$a1:0x100:0x100"]}
							}
						],
						"statementHtml":["Поместить содержимое регистра $a0 в память по адресу из регистра $a1"],
						"solution":["sw $a0, 0($a1)"]
					},
					{
						"name":"Чтение из памяти",
						"id":"2",
						"tests":[
							{
								"shared":true,
								"args":{"mem":["0x100:10:10"],"regs":["$a0::10","$a1:0x100:0x100"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:71:71"],"regs":["$a0::71","$a1:0x100:0x100"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:22:22"],"regs":["$a0::22","$a1:0x100:0x100"]}
							}
						],
						"statementHtml":["Поместить в регистр $a0 содержимое ячейки памяти по адресу из регистра $a1"],
						"solution":["lw $a0, 0($a1)"]
					},
					{
						"name":"Исключающее ИЛИ",
						"id":"3",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:11:11","$a1:3:3","$v0::8"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:23:23","$a1:17:17","$v0::6"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:14:14","$a1:9:9","$v0::7"]}
							}
						],
						"statementHtml":["Выполнить \"исключающее или\" регистров $a0 и $a1, поместить результат в $vo"],
						"solution":["xor $v0, $a0, $a1"]
					},
					{
						"name":"Умножение",
						"id":"4",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:13:13","$a1:3:3","$v0::39"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:11:11","$a1:12:12","$v0::132"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:25:25","$a1:4:4","$v0::100"]}
							}
						],
						"statementHtml":["Умножить содержимое регистров $a0 и $a1 и поместить результат в $v0"],
						"solution":["mult $a0, $a1","mflo $v0"]
					},
					{
						"name":"Деление",
						"id":"5",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:12:12","$a1:3:3","$v0::4"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:117:117","$a1:7:7","$v0::16"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:43:43","$a1:4:4","$v0::10"]}
							}
						],
						"statementHtml":["Разделить содержимое регистра $a0 на содержимое регистра $a1 и поместить целую часть в $v0"],
						"solution":["div $a0, $a1","mflo $v0"]
					}
				]
			},
			{
				"name":"Практикум №1",
				"id":"1.cp1",
				"shared":true,
				"scoring": {
					"scoreBudget":2,
					"classBefore":4,
					"classFrom":2,
					"classHold":3,
					"requireClean":false
				},
				"versions":[
					{
						"name":"Разница экстремумов (итерации и массивы)",
						"id":"1",
						"tests":[
							{
								"shared":true,
								"args":{"mem":["0x100:1:1","0x104:2:2","0x108:3:3","0x10C:8:8","0x110:5:5"],"regs":["$a0:0x100:0x100","$a1:5:5","$v0::7"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:-1:-1","0x104:2:2","0x108:3:3","0x10C:8:8","0x110:5:5","0x114:5:5"],"regs":["$a0:0x100:0x100","$a1:6:6","$v0::9"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:8:8","0x104:0:0","0x108:14:14","0x10C:7:7","0x110:10:10","0x114:13:13"],"regs":["$a0:0x100:0x100","$a1:6:6","$v0::14"]}
							}
						],
						"statementHtml":["Задан целочисленный массив. Найти разность его максимального и минимального элементов.", "Массив задается начальным адресом в $a0 и размером в $a1. Результат ожидается в $v0."],
						"solution":[
							"add\t$t4, $zero, $a0",
							"add\t$t5, $zero, $a1",
							"lw\t$t0, 0($t4)",
							"lw\t$t1, 0($t4)",
							"",
							"iLoop:",
							"addi\t$t5, $t5, -1",
							"beq\t$t5, $zero, end",
							"addi\t$t4, $t4, 4",
							"lw\t$t3, 0($t4)",
							"sub\t$t2, $t3, $t0",
							"bgtz\t$t2, ch_max",
							"sub\t$t2, $t1, $t3",
							"bgtz\t$t2, ch_min",
							"j\tiLoop ",
							"",
							"ch_max:",
							"lw\t$t0, 0($t4)",
							"j\tiLoop",
							"",
							"ch_min:",
							"lw\t$t1, 0($t4)",
							"j\tiLoop ",
							"",
							"end:",
							"sub\t$v0, $t0, $t1"
						]
					},
					{
						"name":"Факториал (процедуры и рекурсия)",
						"id":"2",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:1:1","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:5:5","$v0::120"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:9:9","$v0::362880"]}
							}
						],
						"statementHtml":["Дано натуральное число n, в регистре $a0. Вычислить факториал данного числа и поместить результат в $v0."],
						"solution":[
							"#\t$a0 - n",
							"#\t$v0 - n!",
							"",
							"fact:",
							"addi\t$sp, $sp, -8",
							"sw\t$a0, 4($sp)",
							"sw\t$ra, 0($sp)",
							"addi\t$t7, $a0, -1",
							"blez\t$t7, finish",
							"addi\t$a0, $a0, -1",
							"jal\tfact",
							"",
							"addi\t$a0, $a0, 1",
							"mult\t$a0, $v0",
							"mflo\t$v0",
							"lw\t$ra, 0($sp)",
							"lw\t$a0, 4($sp)",
							"addi\t$sp, $sp, 8",
							"jr\t$ra",
							"",
							"finish:",
							"addi\t$v0, $0, 1",
							"addi\t$sp, $sp, 8",
							"jr\t$ra"
						]
					}
				]
			},
			{
				"name":"Лабораторная №2 - Условные операторы",
				"id":"3.lw2",
				"shared":false,
				"scoring": {
					"scoreBudget":5,
					"classBefore":4,
					"classFrom":2,
					"classHold":3,
					"requireClean":false
				},
				"versions":[
					{
						"name":"Присвоение с условием",
						"id":"1",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:19:19","$a1:19:19","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:25:25","$a1:2:2","$v0::0"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:14:14","$a1:-14:-14","$v0::0"]}
							}
						],
						"statementHtml":["Присвоить $v0 значение 1, если регистры $a0 и $a1 равны, иначе присвоить $v0 значение 0"],
						"solution":["addi $v0, $v0, 1","beq $a0, $a1, end","addi $v0, $v0, -1","end:"]
					},
					{
						"name":"Побитовый сдвиг влево",
						"id":"2",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:12:12","$v0::108"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:6:6","$v0::60"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:0:0","$v0::12"]}
							}
						],
						"statementHtml":["Выполнить побитовый сдвиг значения регистра $a0 влево на 3 разряда и установить 3-й и 4-й биты в 1, результат записать в $v0"],
						"solution":["sll $v0, $a0, 3","ori $v0, $v0, 12"]
					},
					{
						"name":"Побитовый сдвиг вправо",
						"id":"3",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:32:32","$v0::7"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:16:16","$v0::3"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:65:65","$v0::11"]}
							}
						],
						"statementHtml":["Выполнить побитовый сдвиг значения регистра $a0 вправо на 3 разряда и установить 1-й и 2-й биты в 1, результат записать в $v0"],
						"solution":["srl $v0, $a0, 3","ori $v0, $v0, 3"]
					},
					{
						"name":"Проверка на равенство",
						"id":"4",
						"tests":[
							{
								"shared":true,
								"args":{"mem":["0x100:25:25","0x104:25:25"],"regs":["$a0:0x100:0x100","$a1:0x104:0x104","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:0:0","0x104:10:10"],"regs":["$a0:0x100:0x100","$a1:0x104:0x104","$v0::0"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:117:117","0x104:117:117"],"regs":["$a0:0x100:0x100","$a1:0x104:0x104","$v0::1"]}
							}
						],
						"statementHtml":["Установить $v0 в 1, если содержимое ЯП по адресам из регистров $a0 и $a1 равны, иначе установить $v0 в 0."],
						"solution":["addi $v0, $v0, 1","lw $t0, 0($a0) ","lw $t1, 0($a1)","beq $t0, $t1,  end","addi $v0, $v0, -1","end:"]
					},
					{
						"name":"Сумма и вычитание ЯП",
						"id":"5",
						"tests":[
							{
								"shared":true,
								"args":{"mem":["0x100:17:17","0x104:13:13","0x108:5:5"],"regs":["$a0:0x100:0x100","$a1:0x104:0x104","$a2:0x108:0x108","$v0::25"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:9:9","0x104:-3:-3","0x108:6:6"],"regs":["$a0:0x100:0x100","$a1:0x104:0x104","$a2:0x108:0x108","$v0::0"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:1:1","0x104:-5:-5","0x108:-14:-14"],"regs":["$a0:0x100:0x100","$a1:0x104:0x104","$a2:0x108:0x108","$v0::10"]}
							}
						],
						"statementHtml":["Cложить содержимое 2-х ЯП по адресам из регистров $a0 и $a1, отнять от суммы содержимое ЯП по адресу из регистра $a2, результат записать в $v0"],
						"solution":["lw $t0, 0($a0) ","lw $t1, 0($a1)","lw $t2, 0($a2)","add $v0, $t0, $t1","sub $v0, $v0, $t2"]
					},
					{
						"name":"Сложение и проверка неравенства",
						"id":"6",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:5:7","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:-2:0","$v0::0"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:1:3","$v0::1"]}
							}
						],
						"statementHtml":["Увеличить содержимое регистра $a0 на 2, в случае если результат больше 0, записать в $v0 1, иначе записать 0."],
						"solution":["addi $v0, $v0, 1","addi $a0, $a0, 2","bgtz $a0, end","addi $v0, $v0, -1","end:"]
					},
					{
						"name":"Вычитание и проверка неравенства",
						"id":"7",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:2:-1","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:3:0","$v0::0"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:-5:-8","$v0::1"]}
							}
						],
						"statementHtml":["Уменьшить содержимое регистра $a0 на 3, в случае если результат меньше 0, записать в $v0 1, иначе записать 0."],
						"solution":["addi $v0, $v0, 1","addi $a0, $a0, -3","bltz $a0, end","addi $v0, $v0, -1","end:"]
					},
					{
						"name":"Сложение и деление",
						"id":"8",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:3:3","$a1:7:7","$a2:4:4", "$v0::2"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:-13:-13","$a1:25:25","$a2:6:6", "$v0::2"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:0:0","$a1:17:17","$a2:5:5", "$v0::3"]}
							}
						],
						"statementHtml":["Сложить содержимое регистров $a0 и $a1, разделить сумму на содержимое регистра $a2, целую часть записать в $v0"],
						"solution":["add $t0, $a0, $a1","div $t0, $a2", "mflo $v0"]
					},
					{
						"name":"Вычитание и умножение",
						"id":"9",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:23:23","$a1:7:7","$a2:10:10", "$v0::160"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:0:0","$a1:-9:-9","$a2:5:5", "$v0::45"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:4:4","$a1:11:11","$a2:7:7", "$v0::-49"]}
							}
						],
						"statementHtml":["Отнять содержимое регистра $a1 от $a0, умножить разницу на содержимое регистра $a2, записать результат в $v0"],
						"solution":["sub $t0, $a0, $a1","mult $t0, $a2", "mflo $v0"]
					},
					{
						"name":"Логическое И и проверка на равенство нулю",
						"id":"10",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:12:12","$a1:48:48","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:10:10","$a1:5:5","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:11:11","$a1:2:2","$v0::0"]}
							}
						],
						"statementHtml":["Выполнить \"логическое И\" регистров $a0 и $a1, в случае если результат равен 0, записать в $v0 1, иначе записать 0"],
						"solution":["addi $v0, $v0, 1","and $t0, $a0, $a1","beq $t0, $zero, end","addi $v0, $v0, -1","end:"]
					},
					{
						"name":"Логическое ИЛИ и выделение последнего бита",
						"id":"11",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:16:16","$a1:2:2","$v0::0"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:11:11","$a1:0:0","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:7:7","$a1:3:3","$v0::1"]}
							}
						],
						"statementHtml":["Выполнить \"логическое ИЛИ\" регистров $a0 и $a1 и выделить последний бит результата в регистр $v0"],
						"solution":["or $t0, $a0, $a1","andi $v0, $t0, 1"]
					},
					{
						"name":"Установка битов и проверка на равенство",
						"id":"12",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:16:16","$a1:21:21","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:11:11","$a1:15:15","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:0:0","$a1:4:4","$v0::0"]}
							}
						],
						"statementHtml":["Установить 1-й и 3-й биты содержимого регистра $a0 в 1, если результат равен значению из $a1, записать в $v0 1, иначе записать 0"],
						"solution":["addi $v0, $v0, 1","ori  $t0, $a0, 5","beq $t0, $a1,  end","addi $v0, $v0, -1","end:"]
					}
				]
			},
			{
				"name":"Лабораторная №3 - Работа с массивами",
				"id":"4.lw3",
				"shared": false,
				"scoring": {
					"scoreBudget":5,
					"classBefore":4,
					"classFrom":2,
					"classHold":3,
					"requireClean":false
				},
				"versions":[
					{
						"name":"Сумма элементов массива",
						"id":"1",
						"tests":[
							{
								"shared":true,
								"args":{"mem":["0x100:1:1","0x104:2:2","0x108:3:3","0x10C:4:4","0x110:5:5"],"regs":["$a0:0x100:0x100","$a1:5:5","$v0::15"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:11:11","0x104:22:22","0x108:32:32","0x10C:4:4","0x110:5:5"],"regs":["$a0:0x100:0x100","$a1:5:5","$v0::74"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:1:1","0x104:0:0","0x108:0:0","0x10C:7:7","0x110:2:2","0x114:9:9","0x118:5:5"],"regs":["$a0:0x100:0x100","$a1:7:7","$v0::24"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:-3:-3","0x104:1:1","0x108:2:2","0x10C:-7:-7","0x110:-2:-2","0x114:9:9"],"regs":["$a0:0x100:0x100","$a1:6:6","$v0::0"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:-7:-7","0x104:1:1","0x108:9:9","0x10C:-7:-7","0x110:2:2","0x114:-99:-99"],"regs":["$a0:0x100:0x100","$a1:6:6","$v0::-101"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:-117:-117"],"regs":["$a0:0x100:0x100","$a1:1:1","$v0::-117"]}
							}
						],
						"statementHtml":["Задан целочисленный массив. Найти сумму элементов массива"],
						"solution":[
							"add $v0, $zero, $zero",
							"add $t1, $a1, $zero",
							"add $t2, $a0, $zero",
							"iLoop:",
							" ",
							"lw $t0, 0($t2)",
							"add $v0, $v0, $t0",
							"addi $t1, $t1, -1",
							"beq $t1, $zero, end",
							"addi $t2, $t2, 4",
							"j iLoop ",
							"",
							"end:"
						]
					},
					{
						"name":"Максимум массива",
						"id":"2",
						"tests":[
							{
								"shared":true,
								"args":{
									"mem":["0x100:1:1","0x104:2:2","0x108:3:3","0x10C:4:4","0x110:5:5"],
									"regs":["$a0:0x100:0x100","$a1:5:5","$v0::5"]
								}
							},
							{
								"shared":true,
								"args":{
									"mem":["0x100:1:1","0x104:-5:-5","0x108:10:10","0x10C:2:2","0x110:4:4","0x114:8:8"],
									"regs":["$a0:0x100:0x100","$a1:6:6","$v0::10"]
								}
							},
							{
								"shared":true,
								"args":{
									"mem":["0x100:-1:-1","0x104:-2:-2","0x108:-7:-7","0x10C:0:0","0x110:-11:-11","0x114:-16:-16","0x118:-9:-9"],
									"regs":["$a0:0x100:0x100","$a1:7:7","$v0::0"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:17:17","0x104:17:17","0x108:17:17","0x10C:17:17","0x110:17:17","0x114:17:17"],"regs":["$a0:0x100:0x100","$a1:6:6","$v0::17"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:-4:-4","0x104:-3:-3","0x108:-7:-7","0x10C:-12:-12","0x110:-1:-1","0x114:-21:-21","0x118:-9:-9"],"regs":["$a0:0x100:0x100","$a1:7:7","$v0::-1"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:-2:-2","0x104:-13:-13","0x108:-7:-7","0x10C:-4:-4","0x110:-11:-11","0x114:-6:-6","0x118:-2:-2"],"regs":["$a0:0x100:0x100","$a1:7:7","$v0::-2"]}
							}
						],
						"statementHtml":["Задан целочисленный массив. Найти максимальный элемент"],
						"solution":[
							"lw $t0, 0($a0)",
							"lw $t1, 0($a0)",
							"add $t4, $a0, $zero",
							"add $t5, $a1, $zero",
							"",
							"iLoop:",
							"addi $t5, $t5, -1",
							"beq $t5, $zero, end",
							"addi $t4, $t4, 4",
							"lw $t3, 0($t4)",
							"sub $t2, $t3, $t0",
							"bgtz $t2, ch_max",
							"j iLoop",
							"",
							"ch_max:",
							"lw $t0, 0($t4)",
							"j iLoop ",
							"",
							"end:",
							"add $v0, $t0, $zero"
						]
					},
					{
						"name":"Минимум массива",
						"id":"3",
						"tests":[
							{
								"shared":true,
								"args":{"mem":["0x100:1:1","0x104:2:2","0x108:3:3","0x10C:4:4","0x110:5:5"],"regs":["$a0:0x100:0x100","$a1:5:5","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:1:1","0x104:-5:-5","0x108:10:10","0x10C:2:2","0x110:4:4","0x114:8:8"],"regs":["$a0:0x100:0x100","$a1:6:6","$v0::-5"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:-1:-1","0x104:-2:-2","0x108:-7:-7","0x10C:0:0","0x110:-11:-11","0x114:-16:-16","0x118:-9:-9"],"regs":["$a0:0x100:0x100","$a1:7:7","$v0::-16"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:13:13","0x104:13:13","0x108:13:13","0x10C:13:13","0x110:13:13","0x114:13:13"],"regs":["$a0:0x100:0x100","$a1:6:6","$v0::13"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:0:0","0x104:25:25","0x108:7:7","0x10C:12:12","0x110:1:1","0x114:21:21","0x118:9:9"],"regs":["$a0:0x100:0x100","$a1:7:7","$v0::0"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:-1:-1","0x104:-13:-13","0x108:-7:-7","0x10C:-4:-4","0x110:-11:-11","0x114:-6:-6","0x118:-13:-13"],"regs":["$a0:0x100:0x100","$a1:7:7","$v0::-13"]}
							}
						],
						"statementHtml":["Задан целочисленный массив. Найти минимальный элемент."],
						"solution":[
							"lw $t0, 0($a0)",
							"lw $t1, 0($a0)",
							"add $t4, $a0, $zero",
							"add $t5, $a1, $zero",
							"",
							"iLoop:",
							"addi $t5, $t5, -1",
							"beq $t5, $zero, end",
							"addi $t4, $t4, 4",
							"lw $t3, 0($t4)",
							"sub $t2, $t1, $t3",
							"bgtz $t2, ch_min",
							"j iLoop  ",
							"",
							"ch_min:",
							"lw $t1, 0($t4)",
							"j iLoop ",
							"",
							"end:",
							"add $v0, $t1, $zero"
						]
					},
					{
						"name":"Разница массивов",
						"id":"4",
						"tests":[
							{
								"shared":true,
								"args":{"mem":["0x100:0:-2","0x104:2:0","0x108:11:6","0x10C:4:4","0x110:5:3","0x114:2:2","0x118:2:2","0x11C:5:5","0x120:0:0","0x124:2:2"],"regs":["$a0:0x100:0x100","$a1:0x114:0x114","$a2:5:5"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:1:0","0x104:-5:-7","0x108:-10:0","0x10C:2:-5","0x110:4:2","0x114:8:1","0x118:1:1","0x11C:2:2","0x120:-10:-10","0x124:7:7","0x128:2:2","0x12C:7:7"],"regs":["$a0:0x100:0x100","$a1:0x118:0x118","$a2:6:6"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:1:-11","0x104:-5:5","0x108:-10:-17","0x10C:2:0","0x110:40:33","0x114:8:0","0x118:13:1","0x11C:12:12","0x120:-10:-10","0x124:7:7","0x128:2:2","0x12C:7:7","0x130:8:8","0x134:12:12"],"regs":["$a0:0x100:0x100","$a1:0x11C:0x11C","$a2:7:7"]}
							}
						],
						"statementHtml":["Заданы два целочисленных массива одинаковой длины. Отнять от элементов первого массива соответствующие элементы второго"],
						"solution":[
							"add $t0, $a0, $zero",
							"add $t1, $a1, $zero",
							"add $t2, $a2, $zero",
							"",
							"iLoop:",
							"beq $t2, $zero, end",
							"lw $t4, 0($t0)",
							"lw $t5, 0($t1)",
							"sub $t3, $t4, $t5",
							"sw $t3, 0($t0)",
							"addi $t0, $t0, 4",
							"addi $t1, $t1, 4",
							"addi $t2, $t2, -1",
							"j iLoop",
							"end:"
						]
					},
					{
						"name":"Вхождения минимума массива",
						"id":"5",
						"tests":[
							{
								"shared":true,
								"args":{"mem":["0x100:1:1","0x104:2:2","0x108:3:3","0x10C:8:8","0x110:5:5"],"regs":["$a0:0x100:0x100","$a1:5:5","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:-1:-1","0x104:2:2","0x108:3:3","0x10C:-1:-1","0x110:5:5","0x114:-1:-1"],"regs":["$a0:0x100:0x100","$a1:6:6","$v0::3"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:8:8","0x104:8:8","0x108:8:8","0x10C:8:8","0x110:8:8","0x114:8:8"],"regs":["$a0:0x100:0x100","$a1:6:6","$v0::6"]}
							}
						],
						"statementHtml":["Задан целочисленный массив. Подсчитать, сколько раз в нем встречается минимальный элемент"],
						"solution":[
							"lw $t0, 0($a0)",
							"lw $t1, 0($a0)",
							"add $t4, $a0, $zero",
							"add $t5, $a1, $zero",
							"",
							"iLoop:",
							"beq $t5, $zero, end",
							"lw $t3, 0($t4)",
							"sub $t2, $t1, $t3",
							"bgez $t2, ch_min",
							"j next",
							"",
							"ch_min:",
							"bne $t3, $t1, really_ch_min",
							"addi $t8, $t8, 1",
							"j next",
							"",
							"really_ch_min:",
							"add $t1, $t9, $zero",
							"addi $t8, $zero, 1",
							"j next",
							"",
							"next:",
							"addi $t5, $t5, -1",
							"addi $t4, $t4, 4",
							"j iLoop",
							"",
							"end:",
							"add $v0, $t8, $zero"
						]
					},
					{
						"name":"Разделение массива",
						"id":"6",
						"tests":[
							{
								"shared":true,
								"args":{"mem":["0x100:0:0","0x104:8:8","0x108:6:6","0x10C:4:4","0x110:2:2","0x114:1:1","0x118:3:3","0x11C:5:5","0x120:7:7","0x124:9:9","0x200::0","0x204::6","0x208::2","0x20C::3","0x210::7","0x300::8","0x304::4","0x308::1","0x30C::5","0x310::9"],"regs":["$a0:0x100:0x100","$a1:10:10","$a2:0x200:0x200","$a3:0x300:0x300"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:117:117","0x104:34:34","0x108:3:3","0x10C:7:7","0x110:3:3","0x114:-5:-5","0x118:0:0","0x11C:2:2","0x120:7:7","0x124:-4:-4","0x200::117","0x204::3","0x208::3","0x20C::0","0x210::7","0x300::34","0x304::7","0x308::-5","0x30C::2","0x310::-4"],"regs":["$a0:0x100:0x100","$a1:10:10","$a2:0x200:0x200","$a3:0x300:0x300"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:1:1","0x104:3:3","0x108:3:3","0x10C:7:7","0x110:67:67","0x114:-5:-5","0x118:0:0","0x11C:3:3","0x120:7:7","0x124:-4:-4","0x200::1","0x204::3","0x208::67","0x20C::0","0x210::7","0x300::3","0x304::7","0x308::-5","0x30C::3","0x310::-4"],"regs":["$a0:0x100:0x100","$a1:10:10","$a2:0x200:0x200","$a3:0x300:0x300"]}
							}
						],
						"statementHtml":["Задан массив размером 2N. Сформировать два массива размером N включая в первый элементы исходного массива с четными индексами, а во второй - с нечетными"],
						"solution":[
							"add $t1, $zero, $a0",
							"add $t2, $zero, $a1",
							"add $t3, $zero, $a2",
							"add $t4, $zero, $a3",
							"",
							"iLoop:",
							"lw $t0, 0($t1)",
							"sw $t0, 0($t3)",
							"addi $t3, $t3, 4",
							"addi $t2, $t2, -1",
							"beq $t2, $zero, end",
							"addi $t1, $t1, 4",
							"lw $t0, 0($t1)",
							"sw $t0, 0($t4)",
							"addi $t4, $t4, 4",
							"addi $t2, $t2, -1",
							"beq $t2, $zero, end",
							"addi $t1, $t1, 4",
							"j iLoop ",
							"",
							"end:"
						]
					},
					{
						"name":"Разложение числа",
						"id":"7",
						"tests":[
							{
								"shared":true,
								"args":{"mem":["0x100:1:1","0x104:0:0","0x108:2:2","0x10C:1:1","0x110:0:0"],"regs":["$a0:0x100:0x100","$a1:5:5","$a2:3:3","$v0::102"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:2:2","0x104:3:3","0x108:0:0","0x10C:1:1","0x110:0:0"],"regs":["$a0:0x100:0x100","$a1:5:5","$a2:4:4","$v0::708"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:2:2","0x104:1:1","0x108:9:9","0x10C:3:3"],"regs":["$a0:0x100:0x100","$a1:4:4","$a2:10:10","$v0::2193"]}
							}
						],
						"statementHtml":["Число задается целочисленным массивом. Реализовать алгоритм перевода заданного числа из системы счисления р (регистр $a2) в непосредственное значение"],
						"solution":[
							"add $t1, $a1, $zero",
							"sll $t2, $t1, 2",
							"add $t0, $a0, $t2",
							"addi $t0, $t0, -4",
							"addi $t9, $zero, 1",
							"",
							"loop:",
							"beq $t1, $zero, done",
                            "",
							"lw $t7, 0($t0)",
							"mult $t7, $t9",
							"mflo $t6",
							"add $v0, $t6, $v0",
                            "",
							"addi $t0, $t0, -4",
							"addi $t1, $t1, -1",
							"mult $t9, $a2",
							"mflo $t9",
							"j loop",
                            "",
							"done:"
						]
					},
					{
						"name":"Сумма элементов с нечетным индексом",
						"id":"8",
						"tests":[
							{
								"shared":true,
								"args":{
									"mem":["0x100:1:1","0x104:2:2","0x108:3:3","0x10C:3:3","0x110:7:7","0x114:5:5","0x118:2:2","0x11C:9:9"],
									"regs":["$a0:0x100:0x100","$a1:8:8","$v0::19"]}
							},
							{
								"shared":true,
								"args":{
									"mem":["0x100:4:4","0x104:0:0","0x108:2:2","0x10C:8:8","0x110:7:7","0x114:1:1"],
									"regs":["$a0:0x100:0x100","$a1:6:6","$v0::9"]
								}
							},
							{
								"shared":true,
								"args":{
									"mem":[
										"0x100:1:1","0x104:1:1","0x108:5:5","0x10C:8:8",
										"0x110:3:3","0x114:2:2","0x118:0:0","0x11C:9:9","0x120:7:7"],
									"regs":["$a0:0x100:0x100","$a1:9:9","$v0::20"]
								}
							}
						],
						"statementHtml":["Задан целочисленный массив. Найдите сумму элементов массива с нечетным индексом. Индексирование элементов начинается с нуля."],
						"solution":[
							"add $v0, $zero, $zero",
							"add $t1, $a1, $zero",
							"add $t2, $a0, $zero",
							"addi $t2, $t2, 4",
							"addi $t1, $t1, -1",
							"",
							"iLoop:",
							"blez $t1, end",
							"",
							"lw $t0, 0($t2)",
							"add $v0, $v0, $t0",
							"",
							"addi $t1, $t1, -2",
							"addi $t2, $t2, 8",
							"j iLoop",
							"",
							"end:"
						]
					},
					{
						"name":"Отрицательная подпоследовательность",
						"id":"9",
						"tests":[
							{
								"shared":true,
								"args":{
									"mem":["0x100:-1:-1","0x104:-1:-1","0x108:13:13","0x10C:2:2","0x110:-3:-3","0x114:-1:-1"],
									"regs":["$a0:0x100:0x100","$a1:6:6","$v0::2"]}
							},
							{
								"shared":true,
								"args":{
									"mem":["0x100:7:7","0x104:1:1","0x108:3:3","0x10C:-4:-4","0x110:-2:-2","0x114:-1:-1"],
									"regs":["$a0:0x100:0x100","$a1:6:6","$v0::3"]
								}
							},
							{
								"shared":true,
								"args":{
									"mem":["0x100:0:0","0x104:1:1","0x108:1:1","0x10C:5:5","0x110:1:1","0x114:2:2","0x118:9:9"],
									"regs":["$a0:0x100:0x100","$a1:7:7","$v0::0"]
								}
							}
						],
						"statementHtml":["Задан целочисленный массив. Подсчитать наибольшее количество расположенных последовательно отрицательных элементов"],
						"solution":[
							"add $t0, $a0, $zero",
							"add $t1, $a1, $zero",
							"add $v0, $zero, $zero",
							"add $t9, $zero, $zero",
							"",
							"more:",
							"beq $t1, $zero, end",
							"lw $t3, 0($t0)",
							"addi $t1, $t1, -1",
							"addi $t0, $t0, 4",
							"",
							"bgez $t3, zero_t9",
							"addi $t9, $t9, 1",
							"slt $t3, $v0, $t9",
							"beq $t3, $zero, more",
							"add $v0, $t9, $zero",
							"j more",
							"",
							"zero_t9:",
							"add $t9, $zero, $zero",
							"j more",
							"",
							"end:"
						]
					},
					{
						"name":"Положительная подпоследовательность",
						"id":"10",
						"tests":[
							{
								"shared":true,
								"args":{
									"mem":["0x100:-1:-1","0x104:1:1","0x108:1:1","0x10C:0:0","0x110:1:1","0x114:-1:-1"],
									"regs":["$a0:0x100:0x100","$a1:6:6","$v0::2"]}
							},
							{
								"shared":true,
								"args":{
									"mem":["0x100:7:7","0x104:1:1","0x108:1:1","0x10C:4:4","0x110:-4:-4","0x114:-18:-18"],
									"regs":["$a0:0x100:0x100","$a1:6:6","$v0::4"]}
							},
							{
								"shared":true,
								"args":{
									"mem":["0x100:0:0","0x104:1:1","0x108:1:1","0x10C:-5:-5","0x110:1:1","0x114:2:2","0x118:9:9"],
									"regs":["$a0:0x100:0x100","$a1:7:7","$v0::3"]}
							}
						],
						"statementHtml":["Задан целочисленный массив. Подсчитать наибольшее количество расположенных последовательно положительных элементов"],
						"solution":[
							"add $t0, $a0, $zero",
							"add $t1, $a1, $zero",
							"add $v0, $zero, $zero",
							"add $t9, $zero, $zero",
							"",
							"more:",
							"beq $t1, $zero, end",
							"lw $t3, 0($t0)",
							"addi $t1, $t1, -1",
							"addi $t0, $t0, 4",
							"",
							"blez $t3, zero_t9",
							"addi $t9, $t9, 1",
							"slt $t3, $v0, $t9",
							"beq $t3, $zero, more",
							"add $v0, $t9, $zero",
							"j more",
							"",
							"zero_t9:",
							"add $t9, $zero, $zero",
							"j more",
							"",
							"end:"
						]
					},
					{
						"name":"Обращение массива",
						"id":"11",
						"tests":[
							{
								"shared":true,
								"args":{"mem":["0x100:5:1","0x104:4:2","0x108:3:3","0x10C:2:4","0x110:1:5"],"regs":["$a0:0x100:0x100","$a1:5:5"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:6:11","0x104:2:3","0x108:1:4","0x10C:4:1","0x110:3:2","0x114:11:6"],"regs":["$a0:0x100:0x100","$a1:6:6"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:5:5"],"regs":["$a0:0x100:0x100","$a1:1:1"]}
							}
						],
						"statementHtml":["Задан массив натуральных чисел. Поменять местами первый элемент с последним, второй – с предпоследним и т.д"],
						"solution":[
							"add $t0, $a0, $zero",
							"add $t1, $a1, $zero",
							"sll $t9, $t1, 2",
							"add $t2, $a0, $t9",
							"addi $t2, $t2, -4",
							"",
							"more:",
							"sub $t9, $t2, $t0",
							"blez $t9, done",
							"",
							"lw $t8, 0($t0)",
							"lw $t9, 0($t2)",
							"sw $t9, 0($t0)",
							"sw $t8, 0($t2)",
							"",
							"addi $t0, $t0, 4",
							"addi $t2, $t2, -4",
							"j more",
							"",
							"done:"
						]
					},
					{
						"name":"Объединение массивов",
						"id":"12",
						"tests":[
							{
								"shared":true,
								"args":{
									"mem":[
										"0x100:1:1","0x104:3:3","0x108:5:5","0x10C:7:7","0x110:9:9",
										"0x200:2:2","0x204:4:4","0x208:6:6","0x20C:8:8","0x210:10:10",
										"0x300::1","0x304::2","0x308::3","0x30C::4","0x310::5",
										"0x314::6","0x318::7","0x31C::8","0x320::9","0x324::10"
									],
									"regs":[
										"$a0:0x100:0x100","$a1:0x200:0x200","$a2:5:5","$a3:0x300:0x300"
									]
								}
							},
							{
								"shared":true,
								"args":{
									"mem":[
										"0x100:3:3","0x104:1:1","0x108:4:4","0x10C:7:7",
										"0x200:5:5", "0x204:8:8","0x208:0:0","0x20C:6:6",
										"0x300::3","0x304::5","0x308::1","0x30C::8",
										"0x310::4","0x314::0","0x318::7","0x31C::6"],
									"regs":["$a0:0x100:0x100","$a1:0x200:0x200","$a2:4:4","$a3:0x300:0x300"]
								}
							},
							{
								"shared":true,
								"args":{
									"mem":["0x100:5:5","0x200:5:5","0x300::5","0x304::5"],
									"regs":["$a0:0x100:0x100","$a1:0x200:0x200","$a2:1:1","$a3:0x300:0x300"]
								}
							}
						],
						"statementHtml":["Заданы два целочисленных массива. Объединить элементы этих двух массивов в третий массив так, чтобы элементы первого массива были с четными индексами в третьем массиве, а второго – с нечетными"],
						"solution":[
							"add $t0, $a0, $zero",
							"add $t1, $a1, $zero",
							"add $t2, $a2, $zero",
							"add $t3, $a3, $zero",
							"",
							"more:",
							"beq $t2, $zero, done",
							"",
							"lw $t5, 0($t0)",
							"sw $t5, 0($t3)",
							"addi $t0, $t0, 4",
							"addi $t3, $t3, 4",
							"",
							"lw $t5, 0($t1)",
							"sw $t5, 0($t3)",
							"addi $t1, $t1, 4",
							"addi $t3, $t3, 4",
							"",
							"addi $t2, $t2, -1",
							"",
							"j more",
							"",
							"done:"
						]
					}
				]
			},
			{
				"name":"Лабораторная №4 - Битовые маски",
				"id":"5.lw4",
				"shared": false,
				"scoring": {
					"scoreBudget":5,
					"classBefore":4,
					"classFrom":2,
					"classHold":3,
					"requireClean":false
				},
				"versions":[
					{
						"name":"Расширение установленных бит",
						"id":"1",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:17:17","$v0::59"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:21:21","$v0::63"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:15:15","$v0::31"]}
							}
						],
						"statementHtml":["Установить в 1 все биты, смежные с хотя-бы одним уже установленным в 1 в заданном числе. Допускаем, что крайние биты смежны с нулевым. Изначально установленные 1 биты не сбрасывать"],
						"solution":[
							"sll $t0, $a0, 1",
							"sra $t1, $a0, 1",
							"or $v0, $a0, $t0",
							"or $v0, $v0, $t1"
						]
					},
					{
						"name":"Расширение нулевых бит",
						"id":"2",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:70:70","$v0::6"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:17:17","$v0::0"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:31:31","$v0::31"]}
							}
						],
						"statementHtml":["Сбросить в 0 все биты, смежные одновременно с двумя установленными в 0 в заданном числе. Допускаем, что крайние биты смежны с нулевым"],
						"solution":[
							"sll $t0, $a0, 1",
							"sra $t1, $a0, 1",
							"or $v0, $t1, $t0",
							"and $v0, $v0, $a0"
						]
					},
					{
						"name":"Число в обратном порядке",
						"id":"3",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:512:512","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:513:513","$v0::513"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:514:514","$v0::257"]}
							}
						],
						"statementHtml":["Целое положительное число m записывается в двоичной системе счисления и разряды в этой записи представляются в обратном порядке. Найти заданное число"],
						"solution":[
							"add $v0, $v0, $zero",
							"add $t0, $a0, $zero",
							"",
							"more:",
							"beq $t0, $zero, done",
							"andi $t1, $t0, 1",
							"sll $v0, $v0, 1",
							"add $v0, $v0, $t1",
							"srl $t0, $t0, 1",
							"j more",
							"",
							"done:"
						]
					},
					{
						"name":"Обмен четных бит с нечетными",
						"id":"4",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:21:21","$v0::42"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:73:73","$v0::134"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:5:5","$v0::10"]}
							}
						],
						"statementHtml":["Поменять местами четные и нечетные биты в 32-разрядном числе"],
						"solution":[
							"lui $t7, 0x5555",
							"ori $t7, $t7, 0x5555",
							"sll $t6, $t7, 1",
							"",
							"and $t0, $a0, $t6",
							"sra $t0, $t0, 1",
							"add $v0, $t0, $zero",
							"",
							"and $t0, $a0, $t7",
							"sll $t0, $t0, 1",
							"add $v0, $v0, $t0"
						]
					},
					{
						"name":"Делимость на 2^n",
						"id":"5",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:64:64","$a1:6:6","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:129:129","$a1:4:4","$v0::0"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:1024:1024","$a1:10:10","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:123:123","$a1:3:3","$v0::0"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:4:4","$a1:3:3","$v0::0"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:512:512","$a1:9:9","$v0::1"]}
							}
						],
						"statementHtml":["Реализовать функцию, которая возвращает 1 для чисел k, делящихся на 2**n, и 0 для остальных"],
						"solution":[
							"add $t2, $zero, $a1",
							"addi $t0, $zero, 1",
							"addi $v0, $zero, 1",
							"beq $t2, $zero, end",
							"",
							"iLoop:",
							"sll $t0, $t0, 1",
							"addi $t2, $t2, -1",
							"bgtz $t2, iLoop",
							"",
							"div $a0, $t0",
							"mfhi $t1",
							"bne $t1, $zero, false",
							"j end",
							"",
							"false:",
							"addi $v0, $zero, 0",
							"",
							"end:"
						]
					},
					{
						"name":"Старший бит",
						"id":"6",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:65:65","$v0::6"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:63:63","$v0::5"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:9:9","$v0::3"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:89:89","$v0::6"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:255:255","$v0::7"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:1025:1025","$v0::10"]}
							}
						],
						"statementHtml":["Определить номер старшего значащего бита положительного числа. Биты нумеруются с нуля."],
						"solution":[
							"addi $v0, $zero, -1",
							"addi $t0, $a0, 0",
							"",
							"do:",
							"beq $t0, $zero, end",
							"sra $t0, $t0, 1",
							"addi $v0, $v0, 1",
							"j do ",
							"",
							"end:"
						]
					},
					{
						"name":"Установленные биты",
						"id":"7",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:0:0","$v0::0"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:5:5","$v0::2"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:15:15","$v0::4"]}
							}
						],
						"statementHtml":["Дано натуральное число n. Требуется вычислить количество установленных бит"],
						"solution":[
							"addi $v0, $zero, 0",
							"beq $a0, $zero, end",
							"",
							"addi $t0, $zero, 1",
							"",
							"more:",
							"and $t1, $a0, $t0",
							"beq $t1, $zero, next",
							"addi $v0, $v0, 1",
							"",
							"next:",
							"sll $t0, $t0, 1",
							"slt $t1, $a0, $t0",
							"beq $t1, $zero, more",
							"",
							"end:"
						]
					},
					{
						"name":"Слабое расширение установленных бит",
						"id":"8",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:17:17","$v0::17"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:21:21","$v0::31"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:13:13","$v0::15"]}
							}
						],
						"statementHtml":["Установить в 1 все биты, смежные с двумя уже установленными в 1 в заданном числе. Допускаем, что крайние биты смежны с нулевым. Изначально установленные в 1 биты не сбрасывать"],
						"solution":[
							"sll $t0, $a0, 1",
							"sra $t1, $a0, 1",
							"and $v0, $t0, $t1",
							"or $v0, $v0, $a0"
						]
					},
					{
						"name":"Обмен четных байт с нечетными",
						"id":"9",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:0x01020304:0x01020304","$v0::0x02010403"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:0x12345678:0x12345678","$v0::0x34127856"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:0x00110110:0x00110110","$v0::0x11001001"]}
							}
						],
						"statementHtml":["Поменять местами четные и нечетные байты в 32-разрядном числе"],
						"solution":[
							"lui $t7, 0x00FF",
							"ori $t7, $t7, 0x00FF",
							"sll $t6, $t7, 8",
							"",
							"and $t0, $a0, $t6",
							"sra $t0, $t0, 8",
							"add $v0, $t0, $zero",
                            "",
							"and $t0, $a0, $t7",
							"sll $t0, $t0, 8",
							"add $v0, $v0, $t0"
						]
					}
				]
			},
			{
				"name":"Лабораторная №5 - Итеративные алгоритмы",
				"id":"6.lw5",
				"shared": false,
				"scoring": {
					"scoreBudget":5,
					"classBefore":4,
					"classFrom":2,
					"classHold":3,
					"requireClean":false
				},
				"versions":[
					{
						"name":"Наибольший общий делитель",
						"id":"1",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:12:12","$a1:18:18","$v0::6"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:36:36","$a1:54:54","$v0::18"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:117:117","$a1:1:1","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:9:9","$a1:18:18","$v0::9"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:29:29","$a1:87:87","$v0::29"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:12:12","$a1:12:12","$v0::12"]}
							}
						],
						"statementHtml":["Найти наибольший общий делитель двух заданных чисел"],
						"solution":[
							"add $t1, $zero, $a0",
							"add $t2, $zero, $a1",
							"",
							"do:",
							"slt $t0, $t1, $t2",
							"beq $t0, $zero, rev",
							"",
							"div $t2, $t1",
							"mfhi $t0",
							"add $v0, $t1, $zero",
							"beq $t0, $zero, end",
							"add $t2, $t0, $zero",
							"j do",
							"",
							"rev:",
							"div $t1, $t2",
							"mfhi $t0",
							"add $v0, $t2, $zero",
							"beq $t0, $zero, end",
							"add $t1, $t0, $zero",
							"j do",
							"",
							"end:"
						]
					},
					{
						"name":"Количество нулей",
						"id":"2",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:16:16","$a1:2:2","$v0::4"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:131:131","$a1:2:2","$v0::5"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:15:15","$a1:2:2","$v0::0"]}
							}
						],
						"statementHtml":["Подсчитать суммарное количество нулей в записи числа N в системе счисления с основой q"],
						"solution":[
							"addi $v0, $zero, 0",
							"add $t2, $a0, $zero",
							"",
							"loop:",
							"slt $t1, $t2, $a1",
							"bne $t1, $zero, end",
							"div $t2, $a1",
							"mfhi $t0",
							"mflo $t2",
							"beq $t0, $zero, inc",
							"j loop",
							"",
							"inc:",
							"addi $v0, $v0, 1",
							"j loop",
							"  ",
							"end:"
						]
					},
					{
						"name":"Наименьшее общее кратное двух чисел",
						"id":"3",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:5:5","$a1:6:6","$v0::30"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:6:6","$a1:8:8","$v0::24"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:3:3","$a1:27:27","$v0::27"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:17:17","$a1:17:17","$v0::17"]}
							}
						],
						"statementHtml":["Найти наименьшее общее кратное двух заданных чисел"],
						"solution":[
							"add $t1, $zero, $a0",
							"add $t2, $zero, $a1",
							"",
							"do:",
							"slt $t0, $t1, $t2",
							"beq $t0, $zero, rev",
							"",
							"div $t2, $t1",
							"mfhi $t0",
							"add $v0, $t1, $zero",
							"beq $t0, $zero, end",
							"add $t2, $t0, $zero",
							"j do",
							"",
							"rev:",
							"div $t1, $t2",
							"mfhi $t0",
							"add $v0, $t2, $zero",
							"beq $t0, $zero, end",
							"add $t1, $t0, $zero",
							"j do",
							"",
							"end:",
							"mult $a1, $a0",
							"mflo $t0",
							"div $t0, $v0",
							"mflo $v0"
						]
					},
					{
						"name":"Число из ряда Фибоначчи",
						"id":"4",
						"tests":[
							{
								"shared":true,
								"args":{"regs":["$a0:1:1","$v0::1"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:9:9","$v0::34"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:10:10","$v0::55"]}
							},
							{
								"shared":true,
								"args":{"regs":["$a0:3:3","$v0::2"]}
							}
						],
						"statementHtml":["По заданному номеру n найти число из ряда Фибоначчи"],
						"solution":[
							"addi $v0, $zero, 1",
							"beq $a0, $v0, end",
							"addi $t0, $zero, 2",
							"beq $a0, $t0, end",
							"",
							"addi $t0, $a0, -2",
							"addi $t2, $zero, 1",
							"addi $t3, $zero, 1",
							"",
							"more:",
							"beq $t0, $zero, end",
							"add $v0, $t2, $t3",
							"add $t2, $t3, $zero",
							"add $t3, $v0, $zero",
							"addi $t0, $t0, -1",
							"j more",
							"end:"
						]
					},	
					{
						"name":"Удаление повторений",
						"id":"5",
						"tests":[
							{
								"shared":true,
								"args":{"mem":["0x100:1:1","0x104:7:7","0x108:2:7","0x10C:1:1","0x110:30:30","0x114:7:3","0x118:3:3","0x200::1","0x204::7","0x208::1","0x20C::30","0x210::3"],"regs":["$a0:0x100:0x100","$a1:7:7","$v0:0x200:0x200"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:2:2","0x104:3:3","0x108:0:0","0x10C:0:0","0x110:0:0","0x114:2:2","0x200::2","0x204::3","0x208::0","0x20C::2"],"regs":["$a0:0x100:0x100","$a1:6:6","$v0:0x200:0x200"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:2:2","0x104:2:2","0x108:2:2","0x10C:2:2","0x110:2:2","0x114:2:2","0x200::2"],"regs":["$a0:0x100:0x100","$a1:6:6","$v0:0x200:0x200"]}
							}
						],
						"statementHtml":["Задан целочисленный массив. В выходной массив нужно вывести эти же числа, удалив все повторения. То есть, если в массиве встречаются подряд 2 или больше одинаковых чисел, то в этом месте нужно оставить только одно из них. Освободившиеся ячейки заполнить нулями."],
						"solution":[
							"lw $t0, 0($a0)",
							"sw $t0, 0($v0)",
							"addi $v1, $zero, 1",
							"addi $a1, $a1, -1",
							"beq $a1, $zero, end",
							"  ",
							"iLoop:  ",
							"lw $t0, 0($a0)",
							"addi $a0, $a0, 4",
							"lw $t1, 0($a0)",
							"bne $t0, $t1, plus",
							"  ",
							"back:  ",
							"addi $a1, $a1, -1",
							"beq $a1, $zero, end",
							"j iLoop ",
							"  ",
							"plus:  ",
							"addi $v1, $v1, 1",
							"addi $v0, $v0, 4",
							"sw $t1, 0($v0)",
							"j back ",
							"  ",
							"end:"
						]
					},
					{
						"name":"Неспадающая последовательность",
						"id":"6",
						"tests":[
							{
								"shared":true,
								"args":{"mem":["0x100:1:1","0x104:2:2","0x108:2:2","0x10C:3:3","0x110:8:8","0x114:5:5","0x118:2:2","0x11C:1:1"],"regs":["$a0:0x100:0x100","$a1:8:8","$ra::0x828","$v0::5"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:0:0","0x104:2:2","0x108:1:1","0x10C:3:3","0x110:5:5","0x114:7:7","0x118:9:9","0x11C:1:1","0x120:0:0"],"regs":["$a0:0x100:0x100","$a1:9:9","$ra::0x828","$v0::5"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:0:0","0x104:1:1","0x108:2:2","0x10C:1:1","0x110:0:0","0x114:3:3","0x118:4:4","0x11C:5:5"],"regs":["$a0:0x100:0x100","$a1:8:8","$ra::0x828","$v0::6"]}
							}
						],
						"statementHtml":["Задан целочисленный массив. Найти количество элементов в массиве, которые не меньше всех предыдущих элементов массива"],
						"solution":[
							"addi $v0, $zero, 1",
							"addi $t8, $a0, 4",
							"addi $t0, $zero, 1",
							"",
							"iLoop:",
							"lw $t7, 0($t8)",
							"addi $t2, $zero, 0",
							"add $t9, $zero, $a0",
							"add $t1, $zero, $t0",
							"",
							"jLoop:",
							"lw $t6, 0($t9)",
							"sub $t5, $t7, $t6",
							"bgezal $t5, finc",
							"addi $t1, $t1, -1",
							"beq $t1, $zero, m1",
							"addi $t9, $t9, 4",
							"j jLoop",
							"",
							"m1:",
							"beq $t2,$t0, inc",
							"addi $t0, $t0, 1",
							"beq $t0, $a1, end",
							"addi $t8, $t8,4",
							"j iLoop",
							"  ",
							"finc:",
							"addi $t2,$t2, 1",
							"jr $ra",
							"  ",
							"inc:",
							"addi $v0, $v0, 1",
							"addi $t0, $t0, 1",
							"beq $t0, $a1, end",
							"addi $t8, $t8,4",
							"j iLoop",
							"  ",
							"end:"
						]
					},
					{
						"name":"Слияние отсортированных массивов",
						"id":"7",
						"tests":[
							{
								"shared":true,
								"args":{
									"mem":[
										"0x100:1:1", "0x104:3:3", "0x108:5:5", "0x10C:7:7", "0x110:9:9",
										"0x200:2:2", "0x204:4:4", "0x208:6:6", "0x20C:8:8", "0x210:10:10",
										"0x300::1", "0x304::2", "0x308::3", "0x30C::4", "0x310::5",
										"0x314::6", "0x318::7", "0x31C::8", "0x320::9", "0x324::10"
									],
									"regs":["$a0:0x100:0x100","$a1:5:5","$a3:0x200:0x200","$a4:5:5","$a5:0x300:0x300"]
								}
							},
							{
								"shared":true,
								"args":{
									"mem":[
										"0x100:0:0","0x104:1:1","0x108:1:1","0x10C:6:6",
										"0x200:2:2","0x204:4:4","0x208:5:5","0x20C:6:6","0x210:9:9",
										"0x300::0","0x304::1","0x308::1","0x30C::2","0x310::4","0x314::5","0x318::6","0x31C::6","0x320::9"
									],
									"regs":["$a0:0x100:0x100","$a1:4:4","$a2:0x200:0x200","$a3:5:5","$a4:0x300:0x300"]
								}
							},
							{
								"shared":true,
								"args":{
									"mem":[
										"0x100:3:3",
										"0x200:0:0",
										"0x300::0","0x304::3"
									],
									"regs":[
										"$a0:0x100:0x100","$a1:1:1","$a2:0x200:0x200","$a3:1:1","$a4:0x300:0x300"]
								}
							}
						],
						"statementHtml":[
							"Заданы два целочисленных массива, элементы которых упорядочены по неубыванию. Объединить элементы этих двух массивов в третий массив так, чтоб они были упорядочены по неубыванию. Сортировку третьего массива не производить"],
						"solution":[""]
					},
					{
						"name":"Сдвиг массива вправо",
						"id":"8",
						"tests":[
							{
								"shared":true,
								"args":{"mem":["0x100:1:7","0x104:3:9","0x108:5:1","0x10C:7:3","0x110:9:5"],"regs":["$a0:0x100:0x100","$a1:5:5","$a2:2:2"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:0:-1","0x104:2:6","0x108:-1:4","0x10C:6:0","0x110:4:2"],"regs":["$a0:0x100:0x100","$a1:5:5","$a2:3:3"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:3:11","0x104:27:13","0x108:9:3","0x10C:0:27","0x110:1:9","0x114:8:0","0x118:11:1","0x11C:13:8"],"regs":["$a0:0x100:0x100","$a1:8:8","$a2:2:2"]}
							}
						],
						"statementHtml":["Задан целочисленный массив. Произвести циклический сдвиг его элементов на k позиций вправо"],
						"solution":[
							"add $t4, $zero, $a2",
							"beq $t4, $zero, L1",
							"",
							"iLoop:",
							"add $t2, $zero, $a0",
							"addi $t3, $a1, -1",
							"lw $t0, 0($t2)",
							"  ",
							"jLoop:",
							"lw $t1, 4($t2)",
							"sw $t0, 4($t2)",
							"add $t0, $zero, $t1",
							"addi $t3, $t3, -1",
							"beq $t3, $zero, end",
							"addi $t2, $t2, 4",
							"j jLoop ",
							"  ",
							"L1:",
							"addi $t4, $t4, 1",
							"lw $t1, 0($a0)",
							"",
							"end:",
							"sw $t1, 0($a0)",
							"addi $t4, $t4, -1",
							"bgtz $t4, iLoop"
						]
					},
					{
						"name":"Сдвиг массива влево",
						"id":"9",
						"tests":[
							{
								"shared":true,
								"args":{"mem":["0x100:1:5","0x104:3:7","0x108:5:9","0x10C:7:1","0x110:9:3"],"regs":["$a0:0x100:0x100","$a1:5:5","$a2:2:2"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:0:6","0x104:2:4","0x108:-1:0","0x10C:6:2","0x110:4:-1"],"regs":["$a0:0x100:0x100","$a1:5:5","$a2:3:3"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:3:8","0x104:27:11","0x108:9:13","0x10C:0:3","0x110:1:27","0x114:8:9","0x118:11:0","0x11C:13:1"],"regs":["$a0:0x100:0x100","$a1:8:8","$a2:5:5"]}
							}
						],
						"statementHtml":["Задан целочисленный массив. Произвести циклический сдвиг его элементов на k позиций влево"],
						"solution":[""]
					},
					{
						"name":"Обнуление повторений",
						"id":"10",
						"tests":[
							{
								"shared":true,
								"args":{"mem":["0x100:1:1","0x104:2:2","0x108:3:3","0x10C:3:0","0x110:3:0","0x114:5:5","0x118:2:2","0x11C:2:0"],"regs":["$a0:0x100:0x100","$a1:8:8"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:6:6","0x104:0:0","0x108:0:0","0x10C:28:28","0x110:3:3","0x114:19:19"],"regs":["$a0:0x100:0x100","$a1:6:6"]}
							},
							{
								"shared":true,
								"args":{"mem":["0x100:12:12","0x104:12:0","0x108:1:1","0x10C:12:12","0x110:12:0","0x114:1:1","0x11C:12:12","0x120:12:0"],"regs":["$a0:0x100:0x100","$a1:8:8"]}
							}
						],
						"statementHtml":["Задан массив натуральных чисел. Если в массиве встречаются подряд 2 или больше одинаковых чисел, то в этом месте нужно оставить только одно из них, освободившиеся ячейки заполняем нулями"],
						"solution":[""]
					}
				]
			}
		],
		"scoring":{"penaltyLate":0.1,"penaltyHold":0.1,"maxTeam":2},
		"setup":{"codeMaxBytes":10240,"codeDownloadPattern":"${stud}${classFrom}${var}.txt","codeUploadRegex":".+\\.txt","reportMaxBytes":2097152,"reportUploadRegex":".+\\.rtf","codeValidatorCN":"ToBeDone","codeExportUriPattern":"/code/mips/${classFrom}","reportGenerateUriPattern":"/report/"}
	}
],"resourcePath":"res/aos-s10","quizBundles":[]}
