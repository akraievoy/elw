{
	"name":"Повторяющиеся элементы",
	"id":"1",
	"tests":[
		{
			"shared":true,
			"args":{"mem":["0x100:0:0","0x104:8:8","0x108:6:6","0x10C:4:4","0x110:2:2","0x114:1:1","0x118:3:3"],"regs":["$a2:0x100:0x100","$a3:7:7","$t0:2:2","$v1::1"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:17:17","0x104:4:4","0x108:3:3","0x10C:7:7","0x110:3:3","0x114:5:5","0x118:0:0","0x11C:2:2"],"regs":["$a2:0x100:0x100","$a3:8:8","$t0:11:11","$v1::0"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:1:1","0x104:3:3","0x108:3:3","0x10C:7:7","0x110:6:6","0x114:5:5","0x118:0:0","0x11C:3:3","0x120:7:7"],"regs":["$a2:0x100:0x100","$a3:9:9","$t0:3:3","$v1::3"]}
		}
	],
	"statementHtml":["Задан массив, в котором могут быть повторяющиеся элементы. Найти количество различных элементов массива. Можно использовать дополнительный массив такого же размера, как и исходный"],
	"solution":["addi $v0, $zero, 1","  ","lw $t0, 0($a0)","add $t1, $zero, $s0","add $t2, $zero, $a1","  ","loop:  ","  ","sw $t0, 0($t1)","addi $t2, $t2, -1","beq $t2, $zero, break","addi $t1, $t1, 4","j loop ","  ","break:  ","  ","addi $a0, $a0, 4","add $t1, $zero, $s0","addi $t2, $a1, -1","  ","iLoop:  ","  ","lw $t0, 0($a0)","  ","add $a2, $zero, $s0","add $a3, $zero, $a1","jal inloop ","beq $v1, $zero, inc","addi $t2, $t2, -1","beq $t2, $zero, end","addi $a0, $a0, 4","j iLoop ","  ","inc:  ","  ","addi $v0, $v0, 1","addi $t1, $t1, 4","lw $t0, 0($t1)","  ","addi $t2, $t2, -1","beq $t2, $zero, end","addi $a0, $a0, 4","j iLoop ","  ","inloop:  ","  ","lw $t8, 0($a2)","beq $t8, $t0, yes","addi $a3, $a3, -1","beq $a3, $zero, no","addi $a2, $a2, 4","j inloop ","  ","yes:  ","  ","addi $v1, $zero, 1","jr $ra ","  ","no:  ","  ","addi $v1, $zero, 0","jr $ra ","  ","end:  "]
},
{
	"name":"Рекурсивный факториал",
	"id":null,
	"tests":[
		{
			"shared":true,
			"args":{"regs":["$a0:5:5","$v0::120"]}
		},
		{
			"shared":true,
			"args":{"regs":["$a0:3:3","$v0::6"]}
		},
		{
			"shared":true,
			"args":{"regs":["$a0:6:6","$v0::720"]}
		}
	],
	"statementHtml":["Написать рекурсивную функцию для вычисления факториала натурального числа"],
	"solution":["fact:  ","  ","addi $sp, $sp, -8","sw $ra, 0($sp)","addi $t0, $a0, -1","blez $t0, base","addi $a0, $a0, -1","jal fact ","addi $a0, $a0, 1","mult $a0, $v0","mflo $v0 ","lw $ra, 0($sp)","addi $sp, $sp, 4","jr $ra ","  ","base:  ","  ","addi $v0, $ZERO, 1","addi $sp, $sp, 4","jr $ra ","  ","end:  "]
},
{
	"name":"Степень",
	"id":null,
	"tests":[
		{
			"shared":true,
			"args":{"regs":["$a0:3:3","$a1:4:4","$v0::64"]}
		},
		{
			"shared":true,
			"args":{"regs":["$a0:5:5","$a1:2:2","$v0::32"]}
		},
		{
			"shared":true,
			"args":{"regs":["$a0:4:4","$a1:5:5","$v0::625"]}
		}
	],
	"statementHtml":["Написать рекурсивную функцию для вычисления положительной степени целого числа"],
	"solution":["pow:  ","  ","addi $sp, $sp, -4","sw $ra, 0($sp)","addi $t0, $a0, -1","blez $t0, finish","addi $a0, $a0, -1","jal pow ","mult $a1, $v0","mflo $v0 ","lw $ra, 0($sp)","addi $sp, $sp, 4","jr $ra ","  ","finish:  ","  ","add $v0, $ZERO, $a1","addi $sp, $sp, 4","jr $ra ","  ","end:  "]
},
{
	"name":"5.11 Количество разных значений",
	"id":null,
	"tests":[
		{
			"shared":true,
			"args":{"mem":["0x100:1:1","0x104:2:2","0x108:3:3","0x10C:4:4","0x110:5:5","0x114:6:6","0x118:7:7","0x11C:8:8"],"regs":["$a0:0x100:0x100","$a1:8:8","$v0::8"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:26:26","0x104:10:10","0x108:0:0","0x10C:26:26","0x110:3:3","0x114:10:10"],"regs":["$a0:0x100:0x100","$a1:6:6","$v0::4"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:5:5","0x104:5:5","0x108:5:5","0x10C:5:5","0x110:5:5","0x114:5:5","0x11C:5:5","0x120:5:5"],"regs":["$a0:0x100:0x100","$a1:8:8","$v0::1"]}
		}
	],
	"statementHtml":["Задан массив натуральных чисел. Найти количество различных значений в массиве"],
	"solution":[""]
},
{
	"name":"6.2 Различные невходящие элементы",
	"id":null,
	"tests":[
		{
			"shared":true,
			"args":{"mem":["0x100:1:1","0x104:3:3","0x108:5:5","0x10C:7:7","0x110:9:9","0x200:2:2","0x204:4:4","0x208:6:6","0x20C:8:8","0x210:10:10"],"regs":["$a0:0x100:0x100","$a1:5:5","$a3:0x200:0x200","$a4:5:5","$v0::5"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:0:0","0x104:0:0","0x108:0:0","0x10C:0:0","0x200:3:3","0x204:5:5","0x208:6:6","0x20C:8:8","0x210:9:9"],"regs":["$a0:0x100:0x100","$a1:4:4","$a2:0x200:0x200","$a3:5:5","$v0::1"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:3:3","0x200:3:3"],"regs":["$a0:0x100:0x100","$a1:1:1","$a2:0x200:0x200","$a3:1:1","$v0::0"]}
		}
	],
	"statementHtml":["Заданы два массива натуральных чисел. Найти количество различных значений из первого массива, не входящих во второй массив"],
	"solution":[""]
},
{
	"name":"6.3 Различные входящие элементы",
	"id":null,
	"tests":[
		{
			"shared":true,
			"args":{"mem":["0x100:1:1","0x104:3:3","0x108:5:5","0x10C:7:7","0x110:9:9","0x200:2:2","0x204:4:4","0x208:6:6","0x20C:8:8","0x210:10:10"],"regs":["$a0:0x100:0x100","$a1:5:5","$a3:0x200:0x200","$a4:5:5","$v0::0"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:10:10","0x104:11:11","0x108:12:12","0x10C:13:13","0x200:13:13","0x204:11:11","0x208:10:10","0x20C:12:12"],"regs":["$a0:0x100:0x100","$a1:4:4","$a2:0x200:0x200","$a3:4:4","$v0::4"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:1:1","0x200:3:3"],"regs":["$a0:0x100:0x100","$a1:1:1","$a2:0x200:0x200","$a3:1:1","$v0::0"]}
		}
	],
	"statementHtml":["Заданы два массива натуральных чисел. Найти количество различных значений, входящих в оба массива"],
	"solution":[""]
},
{
	"name":"6.4 Различные входящие не в оба массива элементы",
	"id":null,
	"tests":[
		{
			"shared":true,
			"args":{"mem":["0x100:1:1","0x104:3:3","0x108:5:5","0x10C:7:7","0x110:9:9","0x200:2:2","0x204:4:4","0x208:6:6","0x20C:8:8","0x210:10:10"],"regs":["$a0:0x100:0x100","$a1:5:5","$a3:0x200:0x200","$a4:5:5","$v0::10"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:2:2","0x104:3:3","0x108:5:5","0x10C:7:7","0x200:3:3","0x204:8:8","0x208:0:0","0x20C:2:2"],"regs":["$a0:0x100:0x100","$a1:4:4","$a2:0x200:0x200","$a3:4:4","$v0::4"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:1:1","0x200:2:2"],"regs":["$a0:0x100:0x100","$a1:1:1","$a2:0x200:0x200","$a3:1:1","$v0::2"]}
		}
	],
	"statementHtml":["Заданы два массива натуральных чисел. Найти количество различных значений, входящих в один из массивов, но не в оба вместе"],
	"solution":[""]
},
{
	"name":"6.6 Массив адресов",
	"id":null,
	"tests":[
		{
			"shared":true,
			"args":{"mem":["0x100:0x200:0x304","0x104:0x208:0x300","0x108:0x300:0x208","0x10C:0x120:0x200","0x110:0x304:0x120","0x120:10:10","0x200:8:8","0x208:6:6","0x300:4:4","0x304:2:2"],"regs":["$a0:0x100:0x100","$a1:5:5","$v0::0"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:0x20C:0x308","0x104:0x304:0x304","0x108:0x12C:0x210","0x10C:0x308:0x20C","0x110:0x210:0x130","0x114:0x130:0x12C","0x12C:3:3","0x130:1:1","0x20C:7:7","0x210:0:0","0x304:9:9","0x308:4:4"],"regs":["$a0:0x100:0x100","$a1:6:6","$v0::2"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:0x200:0x200","0x200:5:5"],"regs":["$a0:0x100:0x100","$a1:1:1","$v0::1"]}
		}
	],
	"statementHtml":["Заданы два целочисленных массива, причем первый массив хранит адреса элементов второго массива. Отсортировать первый массив по убыванию и проверить, как отсортированы элементы второго массива (0 – по возрастанию, 1 – по убыванию, 2 – не отсортированы)"],
	"solution":[""]
},
{
	"name":"6.7 Средний элемент списка",
	"id":null,
	"tests":[
		{
			"shared":true,
			"args":{"mem":["0x100:3:3","0x104:0x200:0x200","0x108:5:5","0x10C:0x120:0x208","0x120:1:1","0x124:0x208:0x208","0x200:8:8","0x204:0x108:0x108","0x208:15:15","0x20C:0x300:0x300","0x300:4:4","0x304:0x308:0x308","0x308:7:7","0x30C:0:0"],"regs":["$a0:0x100:0x100"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:6:6","0x104:0x204:0x204","0x118:5:5","0x11C:0x134:0x134","0x134:2:2","0x138:0x300:0x300","0x204:9:9","0x208:0x118:0x300","0x300:4:4","0x304:0x308:0x308","0x308:11:11","0x30C:0:0"],"regs":["$a0:0x100:0x100"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:3:3","0x104:0:0"],"regs":["$a0:0x100:0x100"]}
		}
	],
	"statementHtml":["Задан односвязный список. Если в списке больше двух элементов, удалить средний  элемент списка  (или два средних)"],
	"solution":[""]
},
{
	"name":"6.8 Сумма максимальных элементов списков",
	"id":null,
	"tests":[
		{
			"shared":true,
			"args":{"mem":["0x100:3:3","0x104:0x210:0x210","0x108:5:5","0x10C:0x120:0x120","0x120:1:1","0x124:0x208:0x208","0x12C:3:3","0x130:0x224:0x224","0x200:5:5","0x204:0x12C:0x12C","0x208:15:15","0x20C:0x300:0x300","0x210:8:8","0x214:0x108:0x108","0x224:6:6","0x228:0x310:0x310","0x230:0:0","0x234:0:0","0x300:4:4","0x304:0x308:0x308","0x308:7:7","0x30C:0:0","0x310:11:11","0x314:0x230:0x230"],"regs":["$a0:0x100:0x100","$a1:0x200:0x200","$v0::26"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:4:4","0x104:0x140:0x140","0x120:1:1","0x124:0x208:0x208","0x12C:7:7","0x130:0x324:0x324","0x140:8:8","0x144:0x210:0x210","0x200:5:5","0x204:0x12C:0x12C","0x208:5:5","0x20C:0x300:0x300","0x210:8:8","0x214:0x120:0x120","0x218:10:10","0x21C:0x230:0x230","0x230:0:0","0x234:0:0","0x300:4:4","0x304:0:0","0x324:5:5","0x328:0x218:0x218"],"regs":["$a0:0x100:0x100","$a1:0x200:0x200","$v0::18"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:3:3","0x104:0:0","0x200:4:4","0x204:0:0"],"regs":["$a0:0x100:0x100","$a1:0x200:0x200","$v0::7"]}
		}
	],
	"statementHtml":["Заданы два односвязных списка. Найти сумму максимальных элементов каждого списка"],
	"solution":[""]
},
{
	"name":"6.9 Первый на последний",
	"id":null,
	"tests":[
		{
			"shared":true,
			"args":{"mem":["0x100:2:12","0x104:0x218:0x218","0x108:8:11","0x10C:0x220:0x220","0x208:12:2","0x20C:0:0","0x218:8:7","0x21C:0x108:0x108","0x220:7:7","0x224:0x300:0x300","0x300:11:8","0x304:0x30C:0x30C","0x30C:7:8","0x310:0x208:0x208"],"regs":["$a0:0x100:0x100"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:3:9","0x104:0x140:0x140","0x120:1:8","0x124:0x208:0x208","0x140:0:12","0x144:0x210:0x210","0x208:12:0","0x20C:0x300:0x300","0x210:8:1","0x214:0x120:0x120","0x300:9:3","0x304:0:0"],"regs":["$a0:0x100:0x100"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:3:3","0x104:0:0"],"regs":["$a0:0x100:0x100"]}
		}
	],
	"statementHtml":["Задан односвязный список. Поменять местами первый элемент списка с последним, второй – с предпоследним и т.д"],
	"solution":[""]
},
{
	"name":"6.10 Последний элемент",
	"id":null,
	"tests":[
		{
			"shared":true,
			"args":{"mem":["0x100:0:0","0x104:3:3","0x108:0x218:0x218","0x10C:0x224:0x224","0x110:5:5","0x114:0:0","0x218:0x100:0x100","0x21C:1:1","0x220:0x224:0x224","0x224:0x218:0x218","0x228:9:9","0x22C:0x10C:0"],"regs":["$a0:0x100:0x100"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:0:0","0x104:4:4","0x108:0x140:0x140","0x120:0x20C:0x20C","0x124:18:18","0x128:0x300:0","0x140:0x100:0x100","0x144:0:0","0x148:0x20C:0x20C","0x20C:0x140:0x140","0x210:8:8","0x214:0x120:0x120","0x300:0x120:0x120","0x304:11:11","0x308:0:0"],"regs":["$a0:0x100:0x100"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:0:0","0x104:0:0","0x108:0:0"],"regs":["$a0:0x100:0x100"]}
		}
	],
	"statementHtml":["Задан двусвязный список. Если в списке больше одного элемента, удалить последний элемент списка"],
	"solution":[""]
},
{
	"name":"Массив из списков",
	"id":null,
	"tests":[
		{
			"shared":true,
			"args":{"mem":["0x100:2:2","0x104:0x210:0x210","0x108:1:1","0x10C:0x120:0x120","0x120:12:12","0x124:0x208:0x208","0x12C:1:1","0x130:0x224:0x224","0x200:11:11","0x204:0x12C:0x12C","0x208:6:6","0x20C:0x400:0x400","0x210:8:8","0x214:0x108:0x108","0x224:3:3","0x228:0x410:0x410","0x230:4:4","0x234:0:0","0x300::2","0x304::11","0x308::8","0x30C::1","0x310::1","0x314::3","0x318::12","0x31C::7","0x320::6","0x324::4","0x328::9","0x400:7:7","0x404:0x408:0x408","0x408:9:9","0x40C:0:0","0x410:7:7","0x414:0x230:0x230"],"regs":["$a0:0x100:0x100","$a1:0x200:0x200","$a2:0x300:0x300"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:3:3","0x104:0x140:0x140","0x120:1:1","0x124:0x208:0x208","0x12C:1:1","0x130:0x424:0x424","0x140:2:2","0x144:0x210:0x210","0x200:3:3","0x204:0x12C:0x12C","0x208:7:7","0x20C:0x400:0x400","0x210:9:9","0x214:0x120:0x120","0x218:12:12","0x21C:0x230:0x230","0x230:9:9","0x234:0:0","0x300::3","0x304::3","0x308::2","0x30C::1","0x310::9","0x314::5","0x318::1","0x31C::12","0x320::7","0x324::9","0x328::14","0x400:14:14","0x404:0:0","0x424:5:5","0x428:0x218:0x218"],"regs":["$a0:0x100:0x100","$a1:0x200:0x200","$a2:0x300:0x300"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:7:7","0x104:0:0","0x200:2:2","0x204:0:0","0x300::7","0x304::2"],"regs":["$a0:0x100:0x100","$a1:0x200:0x200","$a2:0x300:0x300"]}
		}
	],
	"statementHtml":["Заданы два односвязных списка. Создать массив, элементами с четными индексами которого будут элементы первого списка, а с нечетными – второго"],
	"solution":[""]
},
{
	"name":"Неспадающая подпоследовательность",
	"id":"7",
	"tests":[
		{
			"shared":true,
			"args":{"mem":["0x100:0:0","0x104:5:5","0x108:0x218:0x218","0x10C:0x224:0x224","0x110:2:2","0x114:0x300:0x300","0x218:0x100:0x100","0x21C:11:11","0x220:0x224:0x224","0x224:0x218:0x218","0x228:8:8","0x22C:0x10C:0x10C","0x300:0x10C:0x10C","0x304:2:2","0x308:0:0"],"regs":["$a0:0x100:0x100","$v0::2"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:0:0","0x104:4:4","0x108:0x140:0x140","0x120:0x20C:0x20C","0x124:18:18","0x128:0x300:0x300","0x140:0x100:0x100","0x144:5:5","0x148:0x20C:0x20C","0x20C:0x140:0x140","0x210:7:7","0x214:0x120:0x120","0x300:0x120:0x120","0x304:21:21","0x308:0:0"],"regs":["$a0:0x100:0x100","$v0::5"]}
		},
		{
			"shared":true,
			"args":{"mem":["0x100:0:0","0x104:0:0","0x108:0:0"],"regs":["$a0:0x100:0x100","$v0::1"]}
		}
	],
	"statementHtml":["Задан двусвязный список. Найти количество элементов в списке, которые не меньше любого из предыдущих элементов списка"],
	"solution":[""]
},
