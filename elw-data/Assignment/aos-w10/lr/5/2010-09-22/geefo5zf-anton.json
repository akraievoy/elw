{
  "shared" : false,
  "versions" : [ {
    "solution" : [ "add $t1, $zero, $a0", "add $t2, $zero, $a1", "", "do:", "slt $t0, $t1, $t2", "beq $t0, $zero, rev", "", "div $t2, $t1", "mfhi $t0", "add $v0, $t1, $zero", "beq $t0, $zero, end", "add $t2, $t0, $zero", "j do", "", "rev:", "div $t1, $t2", "mfhi $t0", "add $v0, $t2, $zero", "beq $t0, $zero, end", "add $t1, $t0, $zero", "j do", "", "end:" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:12:12", "$a1:18:18", "$v0::6" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:36:36", "$a1:54:54", "$v0::18" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:117:117", "$a1:1:1", "$v0::1" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:9:9", "$a1:18:18", "$v0::9" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:29:29", "$a1:87:87", "$v0::29" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:12:12", "$a1:12:12", "$v0::12" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "Найти наибольший общий делитель двух заданных чисел" ],
    "name" : "Наибольший общий делитель",
    "id" : "1"
  }, {
    "solution" : [ "addi $v0, $zero, 0", "add $t2, $a0, $zero", "", "loop:", "slt $t1, $t2, $a1", "bne $t1, $zero, end", "div $t2, $a1", "mfhi $t0", "mflo $t2", "beq $t0, $zero, inc", "j loop", "", "inc:", "addi $v0, $v0, 1", "j loop", "  ", "end:" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:16:16", "$a1:2:2", "$v0::4" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:131:131", "$a1:2:2", "$v0::5" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:15:15", "$a1:2:2", "$v0::0" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "Подсчитать суммарное количество нулей в записи числа N в системе счисления с основой q" ],
    "name" : "Количество нулей",
    "id" : "2"
  }, {
    "solution" : [ "add $t1, $zero, $a0", "add $t2, $zero, $a1", "", "do:", "slt $t0, $t1, $t2", "beq $t0, $zero, rev", "", "div $t2, $t1", "mfhi $t0", "add $v0, $t1, $zero", "beq $t0, $zero, end", "add $t2, $t0, $zero", "j do", "", "rev:", "div $t1, $t2", "mfhi $t0", "add $v0, $t2, $zero", "beq $t0, $zero, end", "add $t1, $t0, $zero", "j do", "", "end:", "mult $a1, $a0", "mflo $t0", "div $t0, $v0", "mflo $v0" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:5:5", "$a1:6:6", "$v0::30" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:6:6", "$a1:8:8", "$v0::24" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:3:3", "$a1:27:27", "$v0::27" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:17:17", "$a1:17:17", "$v0::17" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "Найти наименьшее общее кратное двух заданных чисел" ],
    "name" : "Наименьшее общее кратное двух чисел",
    "id" : "3"
  }, {
    "solution" : [ "addi $v0, $zero, 1", "beq $a0, $v0, end", "addi $t0, $zero, 2", "beq $a0, $t0, end", "", "addi $t0, $a0, -2", "addi $t2, $zero, 1", "addi $t3, $zero, 1", "", "more:", "beq $t0, $zero, end", "add $v0, $t2, $t3", "add $t2, $t3, $zero", "add $t3, $v0, $zero", "addi $t0, $t0, -1", "j more", "end:" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:1:1", "$v0::1" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:9:9", "$v0::34" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:10:10", "$v0::55" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:3:3", "$v0::2" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "По заданному номеру n найти число из ряда Фибоначчи (1 1 2 3 5 8 13 21 34 55 ...). Числа ряда нумеруются с единицы." ],
    "name" : "Число из ряда Фибоначчи",
    "id" : "4"
  }, {
    "solution" : [ "addi $t0, $a0, 0", "addi $t1, $a1, 0", "addi $t2, $a2, 0", "addi $v0, $zero, 0", "", "more:", "beq $t1, 0, done", "lw $t9, 0($t0)", "addi $t8, 0, 0", "", "add $t6, $a2, $zero", "add $t7, $v0, $zero", "", "moresrc:", "beq $t7, $zero, donesrc", "lw $t5, 0($t6)", "beq $t5, $t9, found", "addi $t6, $t6, 4", "addi $t7, $t7, -1", "j moresrc", "", "found:", "addi $t8, $zero, 1", "", "donesrc:", "bgtz $t8, skipelem ", "addi $v0, $v0, 1", "sw $t9, 0($t6)", "", "skipelem:", "addi $t0, $t0, 4", "addi $t1, $t1, -1", "", "j more", "", "done:" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "mem" : [ "0x100:1:1", "0x104:7:7", "0x108:2:2", "0x10C:1:1", "0x110:30:30", "0x114:7:7", "0x118:3:3", "0x200::1", "0x204::7", "0x208::2", "0x20C::30", "0x210::3" ],
        "regs" : [ "$a0:0x100:0x100", "$a1:7:7", "$a2:0x200:0x200", "$v0::5" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "mem" : [ "0x100:2:2", "0x104:3:3", "0x108:0:0", "0x10C:0:0", "0x110:0:0", "0x114:2:2", "0x200::2", "0x204::3", "0x208::0" ],
        "regs" : [ "$a0:0x100:0x100", "$a1:6:6", "$a2:0x200:0x200", "$v0::3" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "mem" : [ "0x100:2:2", "0x104:2:2", "0x108:2:2", "0x10C:2:2", "0x110:2:2", "0x114:2:2", "0x200::2" ],
        "regs" : [ "$a0:0x100:0x100", "$a1:6:6", "$a2:0x200:0x200", "$v0::1" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "Задан целочисленный массив. В выходной массив нужно вывести эти же числа, удалив все повторения. То есть, если в массиве встречаются 2 или больше одинаковых чисел, то нужно оставить только первое вхождение. В $v0 вывести длину полученного массива." ],
    "name" : "Удаление повторений",
    "id" : "5"
  }, {
    "solution" : [ "addi $t0, $a0, 0", "addi $t1, $a1, 0", "addi $t2, $a2, 0", "addi $v0, $zero, 0", "", "more:", "beq $t1, 0, done", "lw $t9, 0($t0)", "", "beq $v0, $zero, addelem", "lw $t5, -4($t2)", "beq $t5, $t9, skipelem", "", "addelem:", "sw $t9, 0($t2)", "addi $v0, $v0, 1", "addi $t2, $t2, 4", "", "skipelem:", "addi $t0, $t0, 4", "addi $t1, $t1, -1", "j more", "", "done:" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "mem" : [ "0x100:1:1", "0x104:7:7", "0x108:2:2", "0x10C:2:2", "0x110:30:30", "0x114:30:30", "0x118:3:3", "0x11C:1:1", "0x120:1:1", "0x124:1:1", "0x200::1", "0x204::7", "0x208::2", "0x20C::30", "0x210::3", "0x214::1" ],
        "regs" : [ "$a0:0x100:0x100", "$a1:10:10", "$a2:0x200:0x200", "$v0::6" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "mem" : [ "0x100:2:2", "0x104:3:3", "0x108:0:0", "0x10C:0:0", "0x110:0:0", "0x114:2:2", "0x200::2", "0x204::3", "0x208::0", "0x20C::2" ],
        "regs" : [ "$a0:0x100:0x100", "$a1:6:6", "$a2:0x200:0x200", "$v0::4" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "mem" : [ "0x100:2:2", "0x104:2:2", "0x108:2:2", "0x10C:2:2", "0x110:2:2", "0x114:2:2", "0x200::2" ],
        "regs" : [ "$a0:0x100:0x100", "$a1:6:6", "$a2:0x200:0x200", "$v0::1" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "Задан целочисленный массив. В выходной массив нужно вывести эти же числа, удалив все смежные повторения. То есть, если в массиве подряд встречаются 2 или больше одинаковых чисел, то нужно оставить только первое вхождение из серии. В $v0 вывести длину полученного массива." ],
    "name" : "Удаление смежных повторений",
    "id" : "6"
  }, {
    "solution" : [ "add $t0, $a0, $zero", "add $t1, $a1, $zero", "add $t2, $a2, $zero", "add $t3, $a3, $zero", "add $t4, $s0, $zero", "", "more:", "beq $t1, $zero, arr1_done", "beq $t3, $zero, next_arr1", "", "lw $t8, 0($t0)", "lw $t9, 0($t2)", "slt $t7, $t8, $t9", "bgtz $t7, next_arr1", "j next_arr2", "", "next_arr1:", "lw $t9, 0($t0)", "sw $t9, 0($t4)", "addi $t4, $t4, 4", "addi $t0, $t0, 4", "addi $t1, $t1, -1", "j more", "", "arr1_done:", "beq $t3, $zero, end", "next_arr2:", "lw $t9, 0($t2)", "sw $t9, 0($t4)", "addi $t4, $t4, 4", "addi $t2, $t2, 4", "addi $t3, $t3, -1", "j more", "", "end:" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "mem" : [ "0x100:1:1", "0x104:3:3", "0x108:5:5", "0x10C:7:7", "0x110:9:9", "0x200:2:2", "0x204:4:4", "0x208:6:6", "0x20C:8:8", "0x210:10:10", "0x300::1", "0x304::2", "0x308::3", "0x30C::4", "0x310::5", "0x314::6", "0x318::7", "0x31C::8", "0x320::9", "0x324::10" ],
        "regs" : [ "$a0:0x100:0x100", "$a1:5:5", "$a2:0x200:0x200", "$a3:5:5", "$s0:0x300:0x300" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "mem" : [ "0x100:0:0", "0x104:1:1", "0x108:1:1", "0x10C:6:6", "0x200:2:2", "0x204:4:4", "0x208:5:5", "0x20C:6:6", "0x210:9:9", "0x300::0", "0x304::1", "0x308::1", "0x30C::2", "0x310::4", "0x314::5", "0x318::6", "0x31C::6", "0x320::9" ],
        "regs" : [ "$a0:0x100:0x100", "$a1:4:4", "$a2:0x200:0x200", "$a3:5:5", "$s0:0x300:0x300" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "mem" : [ "0x100:3:3", "0x200:0:0", "0x300::0", "0x304::3" ],
        "regs" : [ "$a0:0x100:0x100", "$a1:1:1", "$a2:0x200:0x200", "$a3:1:1", "$s0:0x300:0x300" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "Заданы два целочисленных массива, элементы которых упорядочены по неубыванию. Объединить элементы этих двух массивов в третий массив так, чтоб они были упорядочены по неубыванию. Сортировку третьего массива не производить." ],
    "name" : "Слияние отсортированных массивов",
    "id" : "7"
  }, {
    "solution" : [ "add $t4, $zero, $a2", "beq $t4, $zero, L1", "", "iLoop:", "add $t2, $zero, $a0", "addi $t3, $a1, -1", "lw $t0, 0($t2)", "  ", "jLoop:", "lw $t1, 4($t2)", "sw $t0, 4($t2)", "add $t0, $zero, $t1", "addi $t3, $t3, -1", "beq $t3, $zero, end", "addi $t2, $t2, 4", "j jLoop ", "  ", "L1:", "addi $t4, $t4, 1", "lw $t1, 0($a0)", "", "end:", "sw $t1, 0($a0)", "addi $t4, $t4, -1", "bgtz $t4, iLoop" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "mem" : [ "0x100:1:7", "0x104:3:9", "0x108:5:1", "0x10C:7:3", "0x110:9:5" ],
        "regs" : [ "$a0:0x100:0x100", "$a1:5:5", "$a2:2:2" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "mem" : [ "0x100:0:-1", "0x104:2:6", "0x108:-1:4", "0x10C:6:0", "0x110:4:2" ],
        "regs" : [ "$a0:0x100:0x100", "$a1:5:5", "$a2:3:3" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "mem" : [ "0x100:3:11", "0x104:27:13", "0x108:9:3", "0x10C:0:27", "0x110:1:9", "0x114:8:0", "0x118:11:1", "0x11C:13:8" ],
        "regs" : [ "$a0:0x100:0x100", "$a1:8:8", "$a2:2:2" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "Задан целочисленный массив. Произвести циклический сдвиг его элементов на k позиций вправо" ],
    "name" : "Сдвиг массива вправо",
    "id" : "8"
  }, {
    "solution" : [ "add $t2, $a2, $zero", "", "more:", "beq $t2, $zero, end", "add $t0, $a0, $zero", "addi $t1, $a1, -1", "addi $t2, $t2, -1", "lw $t9, 0($a0)", "", "shiftmore:", "beq $t1, $zero, storeandmore", "lw $t8, 4($t0)", "sw $t8, 0($t0)", "addi $t1, $t1, -1", "addi $t0, $t0, 4", "j shiftmore", "", "storeandmore:", "sw $t9, 0($t0)", "j more", "", "end:" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "mem" : [ "0x100:1:5", "0x104:3:7", "0x108:5:9", "0x10C:7:1", "0x110:9:3" ],
        "regs" : [ "$a0:0x100:0x100", "$a1:5:5", "$a2:2:2" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "mem" : [ "0x100:0:6", "0x104:2:4", "0x108:-1:0", "0x10C:6:2", "0x110:4:-1" ],
        "regs" : [ "$a0:0x100:0x100", "$a1:5:5", "$a2:3:3" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "mem" : [ "0x100:3:8", "0x104:27:11", "0x108:9:13", "0x10C:0:3", "0x110:1:27", "0x114:8:9", "0x118:11:0", "0x11C:13:1" ],
        "regs" : [ "$a0:0x100:0x100", "$a1:8:8", "$a2:5:5" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "Задан целочисленный массив. Произвести циклический сдвиг его элементов на k позиций влево" ],
    "name" : "Сдвиг массива влево",
    "id" : "9"
  }, {
    "solution" : [ "add $t0, $a0, $zero", "add $t1, $a1, $zero", "", "more:", "beq $t1, $zero, done", "lw $t8, 0($t0)", "beq $t8, $zero, next", "addi $t2, $t0, 4", "addi $t3, $t1, -1", "", "moresrc:", "beq $t3, $zero, next", "lw $t9, 0($t2)", "bne $t8, $t9, nextsrc", "sw $zero, 0($t2)", "", "nextsrc:", "addi $t2, $t2, 4", "addi $t3, $t3, -1", "j moresrc", "", "next:", "addi $t0, $t0, 4", "addi $t1, $t1, -1", "j more", "", "done:" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "mem" : [ "0x100:1:1", "0x104:2:2", "0x108:3:3", "0x10C:3:0", "0x110:3:0", "0x114:5:5", "0x118:2:0", "0x11C:2:0" ],
        "regs" : [ "$a0:0x100:0x100", "$a1:8:8" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "mem" : [ "0x100:6:6", "0x104:0:0", "0x108:0:0", "0x10C:28:28", "0x110:3:3", "0x114:19:19" ],
        "regs" : [ "$a0:0x100:0x100", "$a1:6:6" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "mem" : [ "0x100:12:12", "0x104:12:0", "0x108:1:1", "0x10C:12:0", "0x110:12:0", "0x114:1:0", "0x118:12:0", "0x11C:12:0" ],
        "regs" : [ "$a0:0x100:0x100", "$a1:8:8" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "Задан массив натуральных чисел. Если в массиве встречаются 2 или больше одинаковых чисел, нужно оставить только первое вхождение, а остальные позиции заполнить нулями." ],
    "name" : "Обнуление повторений",
    "id" : "10"
  } ],
  "scoring" : {
    "classReportDue" : 8,
    "classCodeDue" : 7,
    "scoreBudget" : 10,
    "requireClean" : false,
    "classFrom" : 7
  },
  "path" : [ "aos-w10", "lr", "5" ],
  "createStamp" : {
    "time" : 1285174426443,
    "node" : "anton"
  },
  "name" : "Лабораторная №5 - Итеративные алгоритмы",
  "id" : "5"
}
