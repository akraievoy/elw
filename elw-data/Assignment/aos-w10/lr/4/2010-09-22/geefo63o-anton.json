{
  "shared" : false,
  "versions" : [ {
    "solution" : [ "sll $t0, $a0, 1", "sra $t1, $a0, 1", "or $v0, $a0, $t0", "or $v0, $v0, $t1" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:17:17", "$v0::59" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:21:21", "$v0::63" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:15:15", "$v0::31" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "Установить в 1 все биты, смежные с хотя-бы одним уже установленным в 1 в заданном числе. Допускаем, что крайние биты смежны с нулевым. Изначально установленные 1 биты не сбрасывать" ],
    "name" : "Расширение установленных бит",
    "id" : "1"
  }, {
    "solution" : [ "sll $t0, $a0, 1", "sra $t1, $a0, 1", "or $v0, $t1, $t0", "and $v0, $v0, $a0" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:70:70", "$v0::6" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:17:17", "$v0::0" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:31:31", "$v0::31" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "Сбросить в 0 все биты, смежные одновременно с двумя установленными в 0 в заданном числе. Допускаем, что крайние биты смежны с нулевым" ],
    "name" : "Расширение нулевых бит",
    "id" : "2"
  }, {
    "solution" : [ "add $v0, $v0, $zero", "add $t0, $a0, $zero", "", "more:", "beq $t0, $zero, done", "andi $t1, $t0, 1", "sll $v0, $v0, 1", "add $v0, $v0, $t1", "srl $t0, $t0, 1", "j more", "", "done:" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:512:512", "$v0::1" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:513:513", "$v0::513" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:514:514", "$v0::257" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "Целое положительное число m записывается в двоичной системе счисления и разряды в этой записи представляются в обратном порядке. Найти заданное число" ],
    "name" : "Число в обратном порядке",
    "id" : "3"
  }, {
    "solution" : [ "lui $t7, 0x5555", "ori $t7, $t7, 0x5555", "sll $t6, $t7, 1", "", "and $t0, $a0, $t6", "sra $t0, $t0, 1", "add $v0, $t0, $zero", "", "and $t0, $a0, $t7", "sll $t0, $t0, 1", "add $v0, $v0, $t0" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:21:21", "$v0::42" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:73:73", "$v0::134" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:5:5", "$v0::10" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "Поменять местами четные и нечетные биты в 32-разрядном числе" ],
    "name" : "Обмен четных бит с нечетными",
    "id" : "4"
  }, {
    "solution" : [ "add $t2, $zero, $a1", "addi $t0, $zero, 1", "addi $v0, $zero, 1", "beq $t2, $zero, end", "", "iLoop:", "sll $t0, $t0, 1", "addi $t2, $t2, -1", "bgtz $t2, iLoop", "", "div $a0, $t0", "mfhi $t1", "bne $t1, $zero, false", "j end", "", "false:", "addi $v0, $zero, 0", "", "end:" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:64:64", "$a1:6:6", "$v0::1" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:129:129", "$a1:4:4", "$v0::0" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:1024:1024", "$a1:10:10", "$v0::1" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:123:123", "$a1:3:3", "$v0::0" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:4:4", "$a1:3:3", "$v0::0" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:512:512", "$a1:9:9", "$v0::1" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "Реализовать функцию, которая возвращает 1 для чисел k, делящихся на 2**n, и 0 для остальных" ],
    "name" : "Делимость на 2^n",
    "id" : "5"
  }, {
    "solution" : [ "addi $v0, $zero, -1", "addi $t0, $a0, 0", "", "do:", "beq $t0, $zero, end", "sra $t0, $t0, 1", "addi $v0, $v0, 1", "j do ", "", "end:" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:65:65", "$v0::6" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:63:63", "$v0::5" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:9:9", "$v0::3" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:89:89", "$v0::6" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:255:255", "$v0::7" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:1025:1025", "$v0::10" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "Определить номер старшего значащего бита положительного числа. Биты нумеруются с нуля." ],
    "name" : "Старший бит",
    "id" : "6"
  }, {
    "solution" : [ "addi $v0, $zero, 0", "beq $a0, $zero, end", "", "addi $t0, $zero, 1", "", "more:", "and $t1, $a0, $t0", "beq $t1, $zero, next", "addi $v0, $v0, 1", "", "next:", "sll $t0, $t0, 1", "slt $t1, $a0, $t0", "beq $t1, $zero, more", "", "end:" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:0:0", "$v0::0" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:5:5", "$v0::2" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:15:15", "$v0::4" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "Дано натуральное число n. Требуется вычислить количество установленных бит" ],
    "name" : "Установленные биты",
    "id" : "7"
  }, {
    "solution" : [ "sll $t0, $a0, 1", "sra $t1, $a0, 1", "and $v0, $t0, $t1", "or $v0, $v0, $a0" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:17:17", "$v0::17" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:21:21", "$v0::31" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:13:13", "$v0::15" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "Установить в 1 все биты, смежные с двумя уже установленными в 1 в заданном числе. Допускаем, что крайние биты смежны с нулевым. Изначально установленные в 1 биты не сбрасывать" ],
    "name" : "Слабое расширение установленных бит",
    "id" : "8"
  }, {
    "solution" : [ "lui $t7, 0x00FF", "ori $t7, $t7, 0x00FF", "sll $t6, $t7, 8", "", "and $t0, $a0, $t6", "sra $t0, $t0, 8", "add $v0, $t0, $zero", "", "and $t0, $a0, $t7", "sll $t0, $t0, 8", "add $v0, $v0, $t0" ],
    "tests" : [ {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:0x01020304:0x01020304", "$v0::0x02010403" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:0x12345678:0x12345678", "$v0::0x34127856" ]
      },
      "name" : null,
      "id" : null
    }, {
      "shared" : true,
      "args" : {
        "regs" : [ "$a0:0x00110110:0x00110110", "$v0::0x11001001" ]
      },
      "name" : null,
      "id" : null
    } ],
    "statementHtml" : [ "Поменять местами четные и нечетные байты в 32-разрядном числе" ],
    "name" : "Обмен четных байт с нечетными",
    "id" : "9"
  } ],
  "path" : [ "aos-w10", "lr", "4" ],
  "createStamp" : {
    "time" : 1285174426596,
    "node" : "anton"
  },
  "name" : "Лабораторная №4 - Битовые маски",
  "id" : "4"
}
