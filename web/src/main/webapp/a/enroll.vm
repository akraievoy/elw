#* @vtlvariable name="elw_ctx" type="elw.dao.Ctx" *#
#* @vtlvariable name="fileMetas" type="java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.List<elw.vo.Entry<elw.vo.FileMeta>>>>" *#
#* @vtlvariable name="grossScores" type="java.util.Map<java.lang.String,java.lang.Integer>" *#
#* @vtlvariable name="f" type="elw.web.FormatTool" *#
#* @vtlvariable name="u" type="elw.web.VelocityUtils" *#
#* @vtlvariable name="studRowsCreated" type="java.lang.Boolean" *#
#* @vtlvariable name="f_mode" type="java.lang.String" *#
<html>
<head>
 <meta content="text/html; charset=UTF-8">
 <title>Group $elw_ctx.group.name Status : ELW Admin</title>
 #parse("/__/imports.vm")
</head>
<body style="text-align: left;">
<div class="ui-widget-header ui-corner-all" id="elw_header">
 <div id="nav"><a href="index">Index</a> &gt; <a href="enrolls">Enrollments</a> &gt; <span style="font-weight: bold">Group $elw_ctx.group.name
  Status</span></div>
 #parse("/__/credAdm.vm")
 <div id="header_hr"></div>
</div>
 #parse("/__/messages.vm")
<form style="text-align: center;" action="enroll">
 <input type="hidden" name="elw_ctx" value="$elw_ctx.toString()"/>
 <select name="f_mode">
  <option value="a">Approval</option>
  <option value="d">Due</option>
  <option value="dd">Due Diff</option>
  <option value="p">Points</option>
  <option value="s">Scoring</option>
  <option value="dtu">Days to Upload</option>
  <option value="dta">Days to Approve</option>
  <option value="v">Version ID</option>
 </select>
 <input id="dataLoader" type="submit" value="Refresh"/>
</form>
<table cellspacing="0">
 <thead>
 <tr class="elw_header_row">
  <th class="tp_groupName">Group Name</th>
  <th>Score</th>
  <th class="te te_taskHeader">Task</th>
 </tr>
 <tr class="elw_header_row">
  <th></th>
  <th></th>
  <th class="te te_slotHeader">Slot</th>
 </tr>
 </thead>
 <tbody>
 <tr class="elw_row te te_studRow">
  <td class="tp_name"></td>
  <td class="elw_cell_num tp_score"></td>
  <td class="te te_status"></td>
 </tr>
 </tbody>
</table>
</body>
<script type="text/javascript">
 jQuery(document).ready(function() {
  jQuery("select[name=f_mode]").val($f.json($f_mode));

  var te_taskHeader = jQuery(".te.te_taskHeader:first");
  var tp_taskHeader;

  var te_slotHeader = jQuery(".te.te_slotHeader:first");
  var tp_slotHeader;
  var te_studRow = jQuery(".te.te_studRow:first");
  var tp_studRows = {};
  var tp_studRow;
  var tp_status;
  #foreach($entry in $elw_ctx.enr.index)
   #set($idx = $velocityCount - 1)
   #set($elw_ctx_ass = $elw_ctx.extendIndex($idx))

   #set($tp_taskHeader_colspan = 0)
   #foreach($slot in $elw_ctx_ass.assType.fileSlots)
    #if($elw_ctx_ass.indexEntry.classDue.get($slot.id))
     tp_slotHeader = te_slotHeader.clone().toggleClass("te").html($f.json($slot.name));
     te_slotHeader.parent().append(tp_slotHeader);
     #set($tp_taskHeader_colspan = $tp_taskHeader_colspan + 1)

     #foreach($stud in $elw_ctx.group.students)
      #set($elw_ctx_stud = $elw_ctx.extendStudent($stud))
      #if($studRowsCreated)
       tp_studRow = tp_studRows[$f.json($stud.id)];
      #else
       tp_studRow = tp_studRows[$f.json($stud.id)] = te_studRow.clone().toggleClass("te");
       tp_studRow.find(".tp_name").html($f.json($stud.name));
       tp_studRow.find(".tp_score").html($f.json($grossScores.get($elw_ctx_stud.toString())));
       tp_studRow.attr("id", "#studRow--$stud.id");

       te_studRow.parent().append(tp_studRow);
      #end
      #set($elw_ctx_ver = $elw_ctx_stud.extendIndex($idx))
      #set($filesStud = $fileMetas.get("$elw_ctx_ver.toString()").get($slot.id))

      #set($__mode = $f_mode)
      #set($__ctx = $elw_ctx_ver)
      #set($__slot = $slot)
      #set($__file = $u.ref($u.lastOrNull($filesStud)))
      #parse("/__/status.vm")
      tp_status = tp_studRow.find(".te.te_status:first").clone().toggleClass("te")
       .html($f.json($__statusText))
       .toggleClass($f.json($__statusClasses.trim()));
      tp_studRow.append(tp_status);
     #end
     #set($studRowsCreated = true)
    #end
   #end
   #if($tp_taskHeader_colspan > 0)
    tp_taskHeader = te_taskHeader.clone().toggleClass("te")
        .html($f.json($elw_ctx_ass.ass.name))
        .attr("colspan", "$tp_taskHeader_colspan");
    te_taskHeader.parent().append(tp_taskHeader);
   #end
  #end

  jQuery(".tp_groupName").html($f.json($elw_ctx.group.name));  
 });
</script>
 #parse("/__/ready.vm")
</html>
