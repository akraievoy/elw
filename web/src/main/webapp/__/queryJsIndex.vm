#* @vtlvariable name="elw_admin" type="elw.vo.Admin" *#
#* @vtlvariable name="__qId" type="java.lang.String" *#
<script type="text/javascript">
 jQuery(document).ready(function() {
  var dataTable = jQuery('#${__qId}_dataTable').dataTable({
   "sDom": 'lprf<"clear">ti',
   'aaData': [ ],
   'aoColumns': [
    #* 0 index - *# {"bVisible": false, "bSortable": false},
    #* 1 enr.id - *# {"bVisible": false, "bSortable": false},
    #* 2 group.id - *# {"bVisible": false, "bSortable": false},
    #* 3 group.name 0*# {'sTitle': 'Group', "sWidth": "7em", "sClass": "text_align_center"},
    #* 4 course.id - *# {"bVisible": false, "bSortable": false},
    #* 5 course.name 1 *# {'sTitle': 'Course', "sWidth": "23em", "sClass": "text_align_center"},
     #if($elw_admin)
    #* 6 summary ref 2 *# {'sTitle': 'Summary', "bSortable": false, "fnRender": elw_dt_url(6, 'Summary'), "sClass": "text_align_center"},
    #* 7 students ref 3 *# {'sTitle': 'Students', "bSortable": false, "fnRender": elw_dt_url(7, 'Students'), "sClass": "text_align_center"},
     #else
      #* 6 summary ref 2 *# {"bVisible": false, "bSortable": false},
      #* 7 students ref 3 *# {"bVisible": false, "bSortable": false},
     #end
    #* 8 tasks ref 4 *# {'sTitle': 'Tasks', "bSortable": false, "fnRender": elw_dt_url(8, 'Tasks'), "sClass": "text_align_center"},
    #* 9 classes ref 5 *# {'sTitle': 'Classes', "bSortable": false, "fnRender": elw_dt_url(9, 'Classes'), "sClass": "text_align_center"},
    #* 10 uploads ref 6 *# {'sTitle': 'Pending', "bSortable": false, "fnRender": elw_dt_url(10, 'Pending'), "sClass": "text_align_center"},
    #* 11 uploads-open ref 7 *# {'sTitle': 'Open', "bSortable": false, "fnRender": elw_dt_url(11, 'Open'), "sClass": "text_align_center"},
    #* 12 uploads-course ref 8 *# {'sTitle': 'Course', "bSortable": false, "fnRender": elw_dt_url(12, 'Course'), "sClass": "text_align_center"}
   ],
   "aaSorting": [ [5,'asc'], [3,'asc'] ],
   "aaSortingFixed": [ ],
   "fnRowCallback": function(node, data/*, dispIndex, dataIndex*/) {
    jQuery("td:eq(0)", node).attr("title", data[2]);
    jQuery("td:eq(1)", node).attr("title", data[4]);
    return node;
   }
  });

  function loadData() {
   jQuery.ajax({
    "type": "GET",
    "url": "rest/index",
    "data": {},
    "success": function(resp) {
     if (resp == null || !resp.success) {
      jQuery.jGrowl("Response error", {"header":"AJAX error", "theme": "ui-state-error"});
      return;
     }

     dataTable.fnClearTable(resp.data.length == 0);
     dataTable.fnAddData(resp.data);
    },
    "error": function() {
     jQuery.jGrowl("General error", {"header":"AJAX error", "theme": "ui-state-error"});
    },
    "dataType": 'json'
   });

   return false;
  }

  loadData();
 });
</script>
